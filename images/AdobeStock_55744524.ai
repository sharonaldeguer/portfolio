%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 16.2.1%%For: (Jessica Guarnido Guerrero) ()%%Title: (Kaki01170.eps)%%CreationDate: 25/08/13 12:51%%Canvassize: 16383%%BoundingBox: 65 -228 1146 973%%HiResBoundingBox: 65.1719 -227.0547 1145.4668 972.9937%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 0 0 0 0.18 (C=0 M=0 Y=0 K=18)%%+ 0 0 0 0.45 (C=0 M=0 Y=0 K=45)%%+ 0 1 0 0.4 (C=0 M=100 Y=0 K=40)%%+ 0 1 1 0.61 (C=0 M=100 Y=100 K=61)%%+ 0 0.17 0.31 0 (C=0 M=17 Y=31 K=0)%%+ 0.000031 0.35 0.15 0.000031 (C=0 M=35 Y=15 K=0)%%+ 0.000031 0.39 0 0.000031 (C=0 M=39 Y=0 K=0)%%+ 0.000031 0.408942 0.300206 0.000031 (C=0 M=41 Y=30 K=0)%%+ 0 0.45 0.89 0 (C=0 M=45 Y=89 K=0)%%+ 0 0.45 0.89 0.25 (C=0 M=45 Y=89 K=25)%%+ 0.000031 0.61 0.5 0.000031 (C=0 M=61 Y=50 K=0)%%+ 0.000031 0.64 0 0.000031 (C=0 M=64 Y=0 K=0)%%+ 0.000031 0.64 0.300206 0.000031 (C=0 M=64 Y=30 K=0)%%+ 0 0.65 0.34 0 (C=0 M=65 Y=34 K=0)%%+ 0.01 0.01 0.05 0.01 (C=1 M=1 Y=5 K=1)%%+ 1 0.28 1 0.17 (C=100 M=28 Y=100 K=17)%%+ 1 0.28 1 0.43 (C=100 M=28 Y=100 K=43)%%+ 1 0.28 1 0.61 (C=100 M=28 Y=100 K=61)%%+ 1 0.64 0.35 0.45 (C=100 M=64 Y=35 K=45)%%+ 1 0.64 0.35 0.86 (C=100 M=64 Y=35 K=86)%%+ 0.11 0.18 0.21 0.254902 (C=11 M=18 Y=21 K=25)%%+ 0.17 0 0 0.14 (C=17 M=0 Y=0 K=14)%%+ 0.2 0.2 0.298039 0 (C=20 M=20 Y=30 K=0)%%+ 0.3 0 1 0 (C=30 M=0 Y=100 K=0)%%+ 0.380392 0.65098 0.658824 1 (C=38 M=65 Y=66 K=100)%%+ 0.380392 0.65098 0.658824 0.25098 (C=38 M=65 Y=66 K=25)%%+ 0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0)%%+ 0.04 0.4 0.56 0 (C=4 M=40 Y=56 K=0)%%+ 0.45098 0.686275 0.709804 0.466667 (C=45 M=69 Y=71 K=47)%%+ 0.48 0.78 0 0 (C=48 M=78 Y=0 K=0)%%+ 0.48 0.78 0 0.27 (C=48 M=78 Y=0 K=27)%%+ 0.501961 0.529412 0.647059 0.254902 (C=50 M=53 Y=65 K=25)%%+ 0.54 1 0 0.4 (C=54 M=100 Y=0 K=40)%%+ 0.556863 0.709804 0.709804 0.713726 (C=56 M=71 Y=71 K=71)%%+ 0.556863 0.709804 0.709804 0.94 (C=56 M=71 Y=71 K=94)%%+ 0.07 1 1 0.2 (C=7 M=100 Y=100 K=20)%%+ 0.08 0 0 0.05 (C=8 M=0 Y=0 K=5)%%+ 1 1 1 1 ([Registro])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 595.7754 420.4453 595.7754 420.4453%AI3_TileBox: 289.2754 24.9453 901.2754 816.9453%AI3_DocumentPreview: Header%AI5_ArtSize: 1296 1296%AI5_RulerUnits: 0%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: -948.0557 1358.3071 0.6667 2299 1191 18 0 0 6 133 0 0%AI5_OpenViewLayers: 77%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 0%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibraries.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--4 Bn%AI5_BeginGradient: (Unnamed gradient 131)(Unnamed gradient 131) 0 2 Bd[<333333333333333333333434343434343434353535353535363636363737373737383838393939393A3A3A3B3B3B3C3C3C3D3D3D3E3E3E3F3F40404041414242424343444445454646464747484849494A4A4B4B4C4D4D4E4E4F4F50505152525353545455565657585859595A5B5B5C5D5D5E5F5F60616162636464656666676869696A6B6C6C6D6E6F707071727373747576777878797A7B7C7D7D7E7F80><33333333333333333334343434343434343535353535363636363637373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3E3E3F3F3F4040414142424243434444454546464747484849494A4A4B4B4C4D4D4E4E4F4F5051515252535454555656575858595A5A5B5C5C5D5E5E5F606161626363646566666768696A6A6B6C6D6E6E6F7071727273747576777878797A7B7C7D7E7F808081828384858687><4C4C4C4C4C4C4C4C4C4D4D4D4D4D4D4D4E4E4E4E4E4E4F4F4F4F50505050515151515252525353535454545555565656575757585859595A5A5A5B5B5C5C5D5D5E5E5F5F6060616162626364646565666667686869696A6B6B6C6D6D6E6F6F70717172737374757676777878797A7B7B7C7D7E7F7F8081828383848586878788898A8B8C8D8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5><0000000000000000000000010101010101010101020202020202030303030304040404040505050506060606070707070808080909090A0A0A0B0B0B0C0C0C0D0D0D0E0E0E0F0F10101011111212121313141415151616161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202122222323242425252627272828292A2A2B2B2C2D2D2E2F2F3030313232333434353636373838393A3B3B3C3D3D3E3F404041>1 %_Br[0.501961 0.529412 0.647059 0.254902 1 50 100 %_BS%_0.501961 0.529412 0.647059 0.254902 (C=50 M=53 Y=65 K=25) 0 0 5 50 100 Bs0.2 0.2 0.298039 0 1 67.7653 0 %_BS%_0.2 0.2 0.298039 0 (C=20 M=20 Y=30 K=0) 0 0 5 67.7653 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 132)(Unnamed gradient 132) 0 2 Bd[<807F7E7D7D7C7B7A797878777675747373727170706F6E6D6C6C6B6A69696867666665646463626161605F5F5E5D5D5C5B5B5A59595858575656555454535352525150504F4F4E4E4D4D4C4B4B4A4A49494848474746464645454444434342424241414040403F3F3E3E3E3D3D3D3C3C3C3B3B3B3A3A3A39393939383838373737373736363636353535353535343434343434343433333333333333333333><8786858483828180807F7E7D7C7B7A7978787776757473727271706F6E6E6D6C6B6A6A696867666665646363626161605F5E5E5D5C5C5B5A5A5958585756565554545352525151504F4F4E4E4D4D4C4B4B4A4A4949484847474646454544444343424242414140403F3F3F3E3E3D3D3D3C3C3C3B3B3B3A3A3A3939393838383837373737363636363635353535353434343434343434333333333333333333><A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8D8C8B8A8988878786858483838281807F7F7E7D7C7B7B7A79787877767675747373727171706F6F6E6D6D6C6B6B6A6969686867666665656464636262616160605F5F5E5E5D5D5C5C5B5B5A5A5A59595858575757565656555554545453535352525251515151505050504F4F4F4F4E4E4E4E4E4E4D4D4D4D4D4D4D4C4C4C4C4C4C4C4C4C><4140403F3E3D3D3C3B3B3A3938383736363534343332323130302F2F2E2D2D2C2B2B2A2A29282827272625252424232322222120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161615151414131312121211111010100F0F0E0E0E0D0D0D0C0C0C0B0B0B0A0A0A090909080808070707070606060605050505040404040403030303030202020202020101010101010101010000000000000000000000>1 %_Br[0.2 0.2 0.298039 0 1 50 100 %_BS%_0.2 0.2 0.298039 0 (C=20 M=20 Y=30 K=0) 0 0 5 50 100 Bs0.501961 0.529412 0.647059 0.254902 1 32.2347 0 %_BS%_0.501961 0.529412 0.647059 0.254902 (C=50 M=53 Y=65 K=25) 0 0 5 32.2347 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 255)(Unnamed gradient 255) 0 2 Bd[<333333333333323232323232313131313130303030302F2F2F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2B2B2B2A2A2A2A29292928282828272727262626252525252424242323232222222121212020201F1F1F1E1E1D1D1D1C1C><3333333333333333333333333333333332323232323232323232323232323232323232323131313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E><4C4C4C4C4C4C4B4B4B4B4B4B4A4A4A4A4A4A4949494949484848484747474746464646454545454444444443434343424242414141414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3A3A3A393939383838373737363636><000000010101020203030304040505060707080809090A0B0B0C0D0D0E0F0F101111121314141516171718191A1B1B1C1D1E1F2020212223242526262728292A2B2C2D2E2F2F303132333435363738393A3B3C3D3E3F4041>1 %_Br[0.11 0.18 0.21 0.254902 1 50 100 %_BS%_0.11 0.18 0.21 0.254902 (C=11 M=18 Y=21 K=25) 0 0 5 50 100 Bs0.2 0.2 0.298039 0 1 59.9861 0 %_BS%_0.2 0.2 0.298039 0 (C=20 M=20 Y=30 K=0) 0 0 5 59.9861 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 256)(Unnamed gradient 256) 0 2 Bd[<1C1C1D1D1D1E1E1F1F1F20202021212122222223232324242425252525262626272727282828282929292A2A2A2A2B2B2B2C2C2C2C2D2D2D2D2E2E2E2E2F2F2F2F2F30303030303131313131323232323232333333333333><2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F2F2F2F2F2F303030303030303030303030303031313131313131313131313131313131323232323232323232323232323232323232323233333333333333333333333333333333><3636363737373838383939393A3A3A3B3B3B3C3C3C3D3D3D3E3E3E3E3F3F3F4040404141414142424243434343444444444545454546464646474747474848484849494949494A4A4A4A4A4A4B4B4B4B4B4B4C4C4C4C4C4C><41403F3E3D3C3B3A393837363534333231302F2F2E2D2C2B2A2928272626252423222120201F1E1D1C1B1B1A191817171615141413121111100F0F0E0D0D0C0B0B0A09090808070706050504040303030202010101000000>1 %_Br[0.2 0.2 0.298039 0 1 50 100 %_BS%_0.2 0.2 0.298039 0 (C=20 M=20 Y=30 K=0) 0 0 5 50 100 Bs0.11 0.18 0.21 0.254902 1 40.0139 0 %_BS%_0.11 0.18 0.21 0.254902 (C=11 M=18 Y=21 K=25) 0 0 5 40.0139 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registro]) 0 Xs([Registro])Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0.000031 0.61 0.5 0.000031 (C=0 M=61 Y=50 K=0) 0 0 Xk(C=0 M=61 Y=50 K=0)Pc0.380392 0.65098 0.658824 0.25098 (C=38 M=65 Y=66 K=25) 0 0 Xk(C=38 M=65 Y=66 K=25)Pc0.000031 0.408942 0.300206 0.000031 (C=0 M=41 Y=30 K=0) 0 0 Xk(C=0 M=41 Y=30 K=0)Pc0.45098 0.686275 0.709804 0.466667 (C=45 M=69 Y=71 K=47) 0 0 Xk(C=45 M=69 Y=71 K=47)Pc0.380392 0.65098 0.658824 1 (C=38 M=65 Y=66 K=100) 0 0 Xk(C=38 M=65 Y=66 K=100)Pc0.000031 0.64 0.300206 0.000031 (C=0 M=64 Y=30 K=0) 0 0 Xk(C=0 M=64 Y=30 K=0)Pc0.000031 0.35 0.15 0.000031 (C=0 M=35 Y=15 K=0) 0 0 Xk(C=0 M=35 Y=15 K=0)Pc0.000031 0.64 0 0.000031 (C=0 M=64 Y=0 K=0) 0 0 Xk(C=0 M=64 Y=0 K=0)Pc0.000031 0.39 0 0.000031 (C=0 M=39 Y=0 K=0) 0 0 Xk(C=0 M=39 Y=0 K=0)Pc0 0 0 0 k(C=0 M=0 Y=0 K=0)Pc0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk(C=4 M=30 Y=42 K=0)Pc0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk(C=0 M=17 Y=31 K=0)Pc0.04 0.4 0.56 0 (C=4 M=40 Y=56 K=0) 0 0 Xk(C=4 M=40 Y=56 K=0)Pc0.01 0.01 0.05 0.01 (C=1 M=1 Y=5 K=1) 0 0 Xk(C=1 M=1 Y=5 K=1)Pc0 1 1 0.61 (C=0 M=100 Y=100 K=61) 0 0 Xk(C=0 M=100 Y=100 K=61)Pc1 0.28 1 0.17 (C=100 M=28 Y=100 K=17) 0 0 Xk(C=100 M=28 Y=100 K=17)Pc0.3 0 1 0 (C=30 M=0 Y=100 K=0) 0 0 Xk(C=30 M=0 Y=100 K=0)Pc0.48 0.78 0 0 (C=48 M=78 Y=0 K=0) 0 0 Xk(C=48 M=78 Y=0 K=0)Pc0.48 0.78 0 0.27 (C=48 M=78 Y=0 K=27) 0 0 Xk(C=48 M=78 Y=0 K=27)Pc1 0.28 1 0.61 (C=100 M=28 Y=100 K=61) 0 0 Xk(C=100 M=28 Y=100 K=61)Pc1 0.28 1 0.43 (C=100 M=28 Y=100 K=43) 0 0 Xk(C=100 M=28 Y=100 K=43)Pc0.11 0.18 0.21 0.254902 (C=11 M=18 Y=21 K=25) 0 0 Xk(C=11 M=18 Y=21 K=25)Pc0.501961 0.529412 0.647059 0.254902 (C=50 M=53 Y=65 K=25) 0 0 Xk(C=50 M=53 Y=65 K=25)Pc0.2 0.2 0.298039 0 (C=20 M=20 Y=30 K=0) 0 0 Xk(C=20 M=20 Y=30 K=0)Pc0.556863 0.709804 0.709804 0.713726 (C=56 M=71 Y=71 K=71) 0 0 Xk(C=56 M=71 Y=71 K=71)Pc0 0 0 0.18 (C=0 M=0 Y=0 K=18) 0 0 Xk(C=0 M=0 Y=0 K=18)Pc0 0.65 0.34 0 (C=0 M=65 Y=34 K=0) 0 0 Xk(C=0 M=65 Y=34 K=0)Pc0 1 0 0.4 (C=0 M=100 Y=0 K=40) 0 0 Xk(C=0 M=100 Y=0 K=40)Pc0.556863 0.709804 0.709804 0.94 (C=56 M=71 Y=71 K=94) 0 0 Xk(C=56 M=71 Y=71 K=94)Pc0.54 1 0 0.4 (C=54 M=100 Y=0 K=40) 0 0 Xk(C=54 M=100 Y=0 K=40)Pc0 0.45 0.89 0 (C=0 M=45 Y=89 K=0) 0 0 Xk(C=0 M=45 Y=89 K=0)Pc0 0.45 0.89 0.25 (C=0 M=45 Y=89 K=25) 0 0 Xk(C=0 M=45 Y=89 K=25)Pc0 0 0 0.45 (C=0 M=0 Y=0 K=45) 0 0 Xk(C=0 M=0 Y=0 K=45)Pc0.07 1 1 0.2 (C=7 M=100 Y=100 K=20) 0 0 Xk(C=7 M=100 Y=100 K=20)Pc1 0.64 0.35 0.45 (C=100 M=64 Y=35 K=45) 0 0 Xk(C=100 M=64 Y=35 K=45)Pc1 0.64 0.35 0.86 (C=100 M=64 Y=35 K=86) 0 0 Xk(C=100 M=64 Y=35 K=86)Pc0.17 0 0 0.14 (C=17 M=0 Y=0 K=14) 0 0 Xk(C=17 M=0 Y=0 K=14)Pc0.08 0 0 0.05 (C=8 M=0 Y=0 K=5) 0 0 Xk(C=8 M=0 Y=0 K=5)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 2 79 255 79 0 50 Lb(Right Woman) Ln0 Au0 O0.380392 0.65098 0.658824 1 (C=38 M=65 Y=66 K=100) 0 0 Xk0 J 0 j 1 w 10 M []0 d0 XR750.0576 197.1689 m728.4326 170.9912 705.6699 160.1797 v682.9072 149.3672 652.1768 122.0518 638.5195 104.4102 c624.8613 86.7695 623.7236 75.3877 y652.7461 58.8848 l672.6641 91.3213 699.9785 116.9297 v727.2949 142.5381 754.041 154.4883 y750.0576 197.1689 lf0.54 1 0 0.4 (C=54 M=100 Y=0 K=40) 0 0 Xk757.3154 369.9453 m735.3154 244.9453 724.3154 217.9453 v713.3154 190.9453 701.3154 137.9453 755.3154 118.9453 c809.3154 99.9453 849.3154 178.9453 y831.3154 360.9453 l757.3154 369.9453 lfUu0.2 0.2 0.298039 0 (C=20 M=20 Y=30 K=0) 0 0 Xk884.3379 -227.0547 m1027.2021 -227.0547 L1028.3203 -221.835 1029.3105 -217.2139 1030.1357 -213.3691 c1048.8604 -126.1309 1068.1934 -84.0107 1070.7637 -15.8232 c1071.9219 14.8633 1067.2783 53.5166 1059.3262 93.9863 c1056.9404 106.1318 1047.6895 121.4775 1044.1162 135.0938 C1030.0693 129.8096 924.1973 139.5215 v917.0928 140.1729 914.8115 139.0576 908.1357 139.7383 C887.4531 83.0039 885.3916 -4.82324 883.4023 -67.3955 C885.5752 -67.8584 904.7979 -70.9863 906.8652 -71.3857 C898.2695 -92.0332 889.1455 -162.2793 884.3379 -227.0547 Cf1065.6367 29.2109 m1065.6943 29.8174 1065.7607 30.4297 1065.8164 31.0342 c1066.248 35.7373 1061.541 30.1602 1065.6367 29.2109 CBb1 (Unnamed gradient 131) 988.5088 -28.9883 -8.91493 154.1453 0.995819 0.091352 -0.091352 0.995819 839.4956 -823.9189 Bg149.4642 -37.6991 -2.5823 -10.238 1004.3936 53.4014 Xm8267.2178 -2085.2231 -2.5823 -10.238 -7262.8242 2138.6245 Bc149.4642 -37.6991 -2.5823 -10.238 1004.3936 53.4014 Bm8267.2178 -2085.2231 -2.5823 -10.238 1153.8574 15.7021 Bcf0 BB1027.2021 -227.0547 m1028.3203 -221.835 1029.3105 -217.2139 1030.1357 -213.3691 c1048.8604 -126.1309 1068.1934 -84.0107 1070.7637 -15.8232 c1071.2539 -2.87109 1071.3115 12.7988 1070.6221 29.6094 C1068.249 29.0215 1066.668 28.9717 1065.6367 29.2109 C1064.0752 12.8516 905.4961 -47.0752 902.4531 -64.3877 c899.4111 -81.7002 1051.1289 -78.0527 1047.1201 -95.7207 c1037.4365 -138.4102 1026.4629 -159.6133 1016.2783 -198.4248 C1014.1113 -208.0615 1012.0713 -217.5986 1010.0645 -227.0547 C1027.2021 -227.0547 LBb1 (Unnamed gradient 131) 490.8872 -84.5225 -8.91493 974.834 0.995819 0.091352 -0.091352 0.995819 839.4956 -823.9189 Bg945.2306 -238.4135 -65.4662 -259.5518 534.8657 166.8047 Xm7444.7671 -1877.7781 -65.4662 -259.5518 -6909.9014 2044.583 Bc945.2306 -238.4135 -65.4662 -259.5518 534.8657 166.8047 Bm7444.7671 -1877.7781 -65.4662 -259.5518 1480.0967 -71.6084 Bcf0 BB0.2 0.2 0.298039 0 (C=20 M=20 Y=30 K=0) 0 0 Xk768.3623 -215.0791 m769.0361 -218.4971 769.8311 -222.5381 770.7188 -227.0547 C914.3682 -227.0547 L913.1855 -157.9551 915.6543 -71.9707 917.54 -71.6016 C916.6055 -9.00488 898.084 74.7432 900.9268 137.6211 C894.2344 137.0557 887.3555 136.5049 880.2412 135.9736 c774.2178 128.0488 764.6563 134.6465 Y760.8535 121.0928 745.8477 112.7256 743.2568 100.624 c734.624 60.293 730.4375 13.8262 731.0732 -16.876 c732.4941 -85.0977 751.1094 -127.5381 768.3623 -215.0791 cf768.3623 -215.0791 m769.0361 -218.4971 769.8311 -222.5381 770.7188 -227.0547 C778.1602 -227.0547 L764.8096 -163.9404 748.7871 -113.0547 751.7871 -89.0547 c752.1641 -86.041 784.4668 -76.6992 793.7871 -79.0547 C787.2734 -73.4414 795.21 -33.3447 797.7871 -27.0547 C799.9131 -14.7061 766.248 -13.1504 778.1426 -9.21094 C754.3906 -13.665 743.791 -5.37695 740.3271 13.126 C737.332 12.3027 734.2998 11.5684 731.2236 10.9736 C730.9307 0.864258 730.9004 -8.57227 731.0732 -16.876 c732.4941 -85.0977 751.1094 -127.5381 768.3623 -215.0791 cBb1 (Unnamed gradient 132) 678.3242 -45.709 3.46823 132.8495 0.997218 -0.074539 0.074539 0.997218 -626.8857 713.7046 Bg131.6383 17.8987 33.29 -244.835 657.1084 3.8291 Xm8139.437 1106.7109 33.29 -244.835 -7482.3286 -1102.8818 Bc131.6383 17.8987 33.29 -244.835 657.1084 3.8291 Bm8139.437 1106.7109 33.29 -244.835 788.7471 21.7275 Bcf0 BB918.7871 -227.0547 m928.3672 -227.0547 L925.4277 -162.1865 920.5811 -96.4502 913.9912 -63.749 C924.3574 -66.0547 929.3594 -61.0283 931.54 -60.6016 C931.4277 -53.2891 768.3145 -86.877 767.7871 -79.0547 C748.709 -85.4932 898.4131 -82.7139 901.7871 -98.0547 c912.2803 -152.1162 917.9326 -172.2734 918.7871 -227.0547 CBb1 (Unnamed gradient 131) 559.5664 -89.2012 0 565.9116 0.997218 -0.074539 0.074539 0.997218 -626.8857 713.7046 Bg564.3373 42.1825 13.1974 -176.5612 551.7544 -79.6621 Xm7940.168 593.5032 13.1974 -176.5612 -7388.4136 -673.165 Bc564.3373 42.1825 13.1974 -176.5612 551.7544 -79.6621 Bm7940.168 593.5032 13.1974 -176.5612 1116.0918 -37.4795 Bcf0 BBUu0.45098 0.686275 0.709804 0.466667 (C=45 M=69 Y=71 K=47) 0 0 Xk1110.1826 769.5234 m1108.0332 791.314 1105.7393 810.7148 1102.5898 827.8237 c1101.3887 835.5454 1099.6914 843.084 1097.5156 850.3999 c1093.3682 865.4893 1088.002 878.2788 1080.6895 888.8516 C1048.0752 943.7754 985.9824 978.2354 918.083 972.3398 c828.1406 964.5308 760.4395 888.7173 761.2148 799.9434 C757.7529 753.3413 761.8916 702.5537 760.0381 661.603 c757.9014 614.4517 775.8418 521.6611 764.8818 448.0752 c749.5703 345.2852 818.9277 202.5293 820.3164 186.1523 c820.6172 182.5908 820.5898 241.3037 817.7676 261.9688 c809.5439 322.4863 809.0557 378.6699 809.0977 438.2178 C820.248 403.2539 822.2822 365.5117 825.8398 328.4844 c827.5693 308.085 831.3086 289.8838 833.792 269.4648 c836.6807 248.3799 835.123 226.4941 836.8818 206.2051 C839.8516 210.8242 843.1426 216.0293 846.6895 221.6494 C847.5537 269.1172 845.3428 316.665 844.1074 364.1865 c843.6875 377.0137 844.793 390.5557 845.127 403.3604 C848.8721 345.4814 849.3262 271.4434 851.5566 213.6055 C896.0605 181.498 917.4551 177.4971 942.0469 171.6758 c957.4131 168.041 981.4014 164.9688 1005.332 166.8545 C1029.4277 216.4004 1049.6777 269.1357 1051.1289 324.8789 C1052.1563 271.8281 1041.6396 219.5576 1024.2451 169.4893 C1030.5605 170.7979 1036.7031 172.5615 1042.499 174.8613 C1061.2607 221.8789 1069.4941 271.9014 1071.4092 322.0908 C1071.373 274.2822 1068.8311 223.626 1050.749 178.6504 C1067.8096 187.6299 1080.584 202.376 1083.6475 225.6514 c1092.7031 294.4111 1120.2402 667.5854 1110.1826 769.5234 cf0.556863 0.709804 0.709804 0.713726 (C=56 M=71 Y=71 K=71) 0 0 Xk786.75 545.7456 m786.918 501.8267 778.5684 458.1294 779.3936 414.1934 c780.0586 367.5537 782.6553 320.2217 789.8047 273.7305 C804.4453 228.4424 819.6719 193.7393 820.3164 186.1523 c820.4854 184.1475 820.5508 201.9023 820.0732 221.4854 C808.2979 267.2598 797.2773 313.252 795.6963 360.6787 c793.3691 422.3506 800.2461 485.0933 786.75 545.7456 Cf812.1914 666.9961 m811.5889 668.9785 810.8311 665.0649 809.5391 665.7544 C795.5 630.0698 795.166 592.0625 801.3818 553.8853 c809.8252 500.5747 817.1152 453.1934 826.8672 399.8477 c832.5811 367.582 835.0889 338.0225 838.8545 306.4619 c841.8193 278.1689 840.8721 250.3047 836.0273 223.0977 C836.1719 217.3818 836.4033 211.7334 836.8818 206.2051 C839.8516 210.8242 843.1426 216.0293 846.6895 221.6494 C847.1807 248.6992 846.6748 275.7754 845.918 302.8584 C845.375 306.7363 845.3398 310.5986 845.582 314.4561 C845.0859 331.0332 844.5381 347.6133 844.1074 364.1865 c843.6875 377.0137 844.793 390.5557 845.127 403.3604 C846.5059 382.0313 847.4385 358.5068 848.1787 334.4111 C850.3711 350.7383 850.4072 367.1211 852.0029 383.4629 c861.0596 479.5771 841.2617 575.1328 812.1914 666.9961 cf1082.2207 490.2056 m1089.8125 529.9897 1096.7285 569.1367 1096.4609 609.1245 C1074.1084 531.0537 1056.9648 451.5356 1025.4746 375.0137 c1008.6807 334.1563 997.7988 293.8037 985.5215 250.209 c977.7803 221.6064 967.7715 195.1299 957.2246 168.7891 C971.1963 166.6855 988.2773 165.5127 1005.332 166.8545 C1029.4277 216.4004 1049.6777 269.1357 1051.1289 324.8789 C1052.1563 271.8281 1041.6396 219.5576 1024.2451 169.4893 C1026.498 169.9561 1028.7246 170.4834 1030.9258 171.0693 C1037.3896 184.2227 1040.7705 197.54 1044.1719 211.9756 c1054.4668 254.9678 1054.8516 294.9395 1066.4395 337.2422 C1067.1455 339.1885 1068.5254 341.7754 1069.2324 343.7246 c1073.4668 355.4102 1073.2051 370.4932 1084.459 374.7881 c1088.7383 376.3457 1092.9951 378.0596 1097.1777 379.957 C1099.3672 410.2861 1101.543 442.8711 1103.5342 475.9629 C1091.8398 475.9536 1080.1709 478.856 1082.2207 490.2056 cf0.556863 0.709804 0.709804 0.94 (C=56 M=71 Y=71 K=94) 0 0 Xk1017.54 873.4541 m1005.8623 875.7378 992.8789 877.2529 978.4414 878.2139 c888.7207 884.1802 795.6484 708.9946 799.0117 698.6172 C800.7305 694.9419 801.8447 691.2817 802.96 687.6196 C808.2363 657.8257 808.7559 631.1812 814.6523 601.9751 c824.8672 552.6836 835.1943 507.626 841.7666 457.8242 c845.9023 424.835 849.4961 393.0068 852.5068 360.7607 C898.7021 354.6445 940.0859 349.3682 954.5977 345.9336 c972.7441 341.6396 1001.4014 359.5215 1027.6895 386.8037 C1028.0957 388.2676 1028.4902 389.7383 1028.8701 391.2188 c1030.2227 396.627 1031.5752 402.04 1032.9248 407.4521 c1051.8975 477.3433 1066.1455 543.9014 1075.3223 614.4546 C1074.5762 641.2993 1073.3037 668.1079 1070.6797 695.1758 c1064.5625 757.8877 1044.6738 816.9058 1017.54 873.4541 CfUu0.48 0.78 0 0.27 (C=48 M=78 Y=0 K=27) 0 0 Xk972.7871 530.4453 m979.5371 539.4453 986.5371 539.6953 v993.5371 539.9453 998.0371 517.6953 y972.7871 530.4453 lf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk976.5059 536.2715 m970.1602 541.5918 970.1357 561.5044 v970.1318 563.9497 970.1631 566.6758 970.2158 569.5747 C970.2148 569.5747 L970.5947 590.2759 972.2021 619.8433 Y903.1641 594.4575 L903.1074 584.2949 902.7012 571.7002 V902.7002 571.7002 L902.4775 564.8066 901.2139 553.5127 900.3916 546.686 C898.5059 544.1235 886.3574 539.6118 868.3574 536.9453 c845.5215 533.5625 819.6904 536.2788 Y817.0967 460.8184 810.3184 432.2002 V874.3906 401.623 888.9697 317.0078 961.3203 323.3594 c965.7969 323.752 1035.3574 426.2749 1039.7656 426.8716 C1035.1445 462.7891 1028.167 511.3232 Y986.5322 527.4316 976.5059 536.2715 Vf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk970.541 581.9424 m971.1426 600.3545 972.2021 619.8433 Y903.1641 594.4575 L903.1299 588.4346 902.9287 579.9282 V928.4531 553.9458 949.1855 567.9111 970.541 581.9424 Cf913.2275 429.7563 m923.8662 413.2666 926.5254 402.0957 v929.1855 390.9258 927.5898 409.543 935.5684 421.7773 c943.5479 434.0117 945.6758 435.0757 y936.1006 417.5225 933.9727 401.5645 v931.8457 385.6064 935.0371 362.2012 y919.0791 363.7969 l923.334 382.9463 921.7383 398.3721 v920.1426 413.7988 913.2275 429.7563 yf871.0771 533.1641 m912.5684 514.0146 920.5469 509.2271 v928.5254 504.4395 931.7178 500.1841 937.0371 499.6523 c942.3564 499.1201 946.0801 512.4185 956.7188 511.8867 c967.3574 511.3545 974.2715 512.4185 988.6338 515.6104 c1002.9961 518.8018 1008.8477 520.9297 y996.0234 514.1367 980.0654 510.9453 v964.1074 507.7539 957.7822 508.6953 954.0586 507.0991 c950.335 505.5034 945.0156 494.8647 936.5049 494.8647 c927.9941 494.8647 921.0791 504.4395 916.8232 506.5674 c912.5684 508.6953 871.0771 533.1641 yfUu1 Ap0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk1067.8936 746.7705 m1065.5879 718.1533 1064.9102 695.8242 1057.0527 672.3369 c1038.7197 617.5239 969.3359 577.9438 930.6328 577.9438 c894.8203 577.9438 804.543 646.771 801.1641 708.0225 c799.0869 745.7124 799.4551 756.7974 801.5586 782.7832 c804.5693 820.1138 828.6572 846.4092 845.0771 864.2134 c860.876 881.3447 868.543 890.6357 895.2725 893.2876 c906.7949 894.4307 914.7861 875.2393 928.1484 874.1616 c965.4072 871.1558 991.6797 880.3296 1016.6895 856.752 c1043.0664 831.8857 1071.5703 792.3198 1067.8936 746.7705 cf0 Ap0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk1016.6895 856.752 m1006.6885 866.1802 996.4824 870.3643 985.4561 872.1914 C1029.5859 813.7505 1040.3613 740.0664 1031.2871 669.9453 c1025.7871 627.4453 1015.2988 616.6235 1014.0859 614.0332 C1033.2646 629.7451 1049.4961 649.7451 1057.0527 672.3369 c1064.9102 695.8242 1065.5879 718.1533 1067.8936 746.7705 c1071.5703 792.3198 1043.0664 831.8857 1016.6895 856.752 cf905.0566 889.7637 m901.9551 892.0967 898.7773 893.6353 895.2725 893.2876 c868.543 890.6357 860.876 881.3447 845.0771 864.2134 c828.6572 846.4092 804.5693 820.1138 801.5586 782.7832 c799.4551 756.7974 799.0869 745.7124 801.1641 708.0225 c802.3018 687.3945 813.3027 665.9106 828.7529 646.4824 C813.918 733.167 834.96 833.4629 905.0566 889.7637 Cf1 Ap0.000031 0.61 0.5 0.000031 (C=0 M=61 Y=50 K=0) 0 0 Xk996.3291 688.8735 m997.5234 679.1821 1011.8164 672.9663 1028.2559 674.9922 c1044.6934 677.0176 1057.0576 686.5171 1055.8633 696.207 c1054.6719 705.9019 1040.3711 712.1143 1023.9355 710.0884 c1007.4883 708.063 995.1309 698.5635 996.3291 688.8735 cf874.4834 696.1885 m871.8643 686.7803 856.8057 682.7544 840.8486 687.1963 c824.8926 691.6382 814.0742 702.8652 816.6953 712.271 c819.3135 721.6816 834.373 725.7041 850.3252 721.2637 c866.29 716.8213 877.1035 705.5947 874.4834 696.1885 cf0 Ap0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk4 M917.8672 691.4883 m918.5898 676.9214 934.8389 675.3457 v947.8555 674.0801 952.8164 684.5449 953.0527 688.1748 C942.2744 683.8345 928.2256 685.438 917.8672 691.4883 CfUu0.04 0.4 0.56 0 (C=4 M=40 Y=56 K=0) 0 0 Xk912.0771 614.4375 m917.4971 606.479 932.252 604.9546 v948.543 603.2715 953.8047 612.8442 y912.0771 614.4375 lf0 1 0 0.4 (C=0 M=100 Y=0 K=40) 0 0 Xk10 M983.0645 654.6133 m988.9258 656.3838 990.1094 659.418 990.7461 658.6406 c991.6074 657.5825 991.9834 657.6436 987.9111 653.4307 c985.9424 651.3999 978.9229 640.5142 y960.8027 614.6543 930.7354 617.6221 v900.6641 620.5835 889.8838 642.981 887.9258 647.5283 c886.7949 650.147 886.1094 652.4219 885.2559 654.4624 c884.625 655.9678 884.1504 658.2876 883.3613 659.7568 c880.7715 664.5854 881.2598 664.6826 882.0498 665.333 c884.2617 667.1597 884.0752 662.0723 887.7041 660.1865 c889.1104 659.4556 912.2607 654.3545 936.5059 653.4839 c960.7588 652.6128 978.4297 653.2075 983.0645 654.6133 cf/BBAccumRotation (0.361260) XT0 0 0 0 k4 M907.0801 641.6641 m900.1172 644.0273 898.0771 651.4814 896.4229 658.2842 C905.2744 656.4829 921.6172 653.8398 938.4971 653.2354 c951.8447 652.7578 965.4219 653.394 974.9414 654.0625 C972.9395 646.6328 971.4668 642.5996 964.083 639.9453 C969.8643 639.2559 970.916 636.4966 970.0508 631.0361 C961.1553 624.9648 945.5625 619.8818 933.252 621.0986 c914.8613 622.9072 903.6279 628.3052 897.6221 636.1606 C899.208 639.5444 902.0938 641.8413 907.0801 641.6641 Cf/BBAccumRotation (0.361260) XT0 0.65 0.34 0 (C=0 M=65 Y=34 K=0) 0 0 Xk10 M987.0488 656.4995 m977.1738 646.7671 932.5195 650.7256 v887.8643 654.6865 885.6699 661.8364 y912.3613 665.749 934.1279 663.2549 v958.0039 660.519 987.0488 656.5024 987.0488 656.4995 cf/BBAccumRotation (0.361260) XT987.043 652.8481 m985.5518 646.8354 981.5664 639.272 v979.0146 634.4292 975.7949 626.7881 970.9365 621.8442 c962.8398 613.605 950.8223 609.0127 934.376 609.1597 c919.2471 609.2974 907.8418 614.5781 900.0527 623.7095 c895.3311 629.2456 892.1953 637.6108 889.625 643.0508 c885.5381 651.6987 883.9102 658.6011 883.9092 658.6011 c886.7305 656.8262 889.6074 652.8091 v892.1396 649.2705 895.3359 643.2456 899.8662 638.2593 c906.2959 631.1841 917.6602 625.7407 931.5781 624.8286 c947.2744 623.7983 961.9189 627.8706 969.6309 635.2744 c974.2939 639.7515 977.8037 645.9072 980.8232 648.7051 c984.5625 652.1709 987.0439 652.8481 987.043 652.8481 cf/BBAccumRotation (0.361260) XT1 Ap0.000031 0.35 0.15 0.000031 (C=0 M=35 Y=15 K=0) 0 0 Xk965.8789 620.873 m964.6475 619.665 959.0488 617.3643 958.8574 619.0845 c958.5732 621.645 961.1191 621.2554 962.5566 622.2144 c965.1172 623.9214 966.2998 626.7344 967.8203 625.9131 c969.3438 625.0947 967.5361 622.4985 965.8789 620.873 cfUu0 Ap0 0 0 0.18 (C=0 M=0 Y=0 K=18) 0 0 Xk1037.4658 737.4312 m1038.4746 734.5332 1036.9824 721.561 1025.3203 714.8379 c1013.6563 708.1152 1000.3447 711.7266 990.7471 713.3071 c979.5488 715.1499 967.2793 715.9556 968.8379 722.3081 c970.4004 728.6606 981.75 746.1299 992.4111 749.0469 c1003.0742 751.9634 1032.3271 752.1943 1037.4658 737.4312 cf0 0 0 0 k1025.8613 728.6733 m1028.2471 726.7446 1027.7334 721.6802 1016.0723 714.959 c1004.4111 708.2339 993.3965 712.3169 983.8379 714.1055 c978.7305 715.063 967.2793 715.9556 968.8379 722.3081 c970.4004 728.6606 977.4746 731.4199 988.1357 734.3364 c998.7969 737.2534 1012.2568 739.6689 1025.8613 728.6733 cf1 Ap0.45098 0.686275 0.709804 0.466667 (C=45 M=69 Y=71 K=47) 0 0 Xk978.6221 735.6411 m977.4873 723.3145 986.5615 712.4014 998.8877 711.2666 c1011.2178 710.1323 1022.1289 719.2061 1023.2627 731.5337 c1024.3965 743.8618 1015.3242 754.7734 1002.9941 755.9077 c990.667 757.0415 979.7549 747.9692 978.6221 735.6411 cf0 Ap0.380392 0.65098 0.658824 0.25098 (C=38 M=65 Y=66 K=25) 0 0 Xk1020.0889 732.2192 m1020.0801 732.0879 1020.0869 731.96 1020.0742 731.8281 c1019.1035 721.2617 1009.7441 713.4839 999.1807 714.4561 c989.5918 715.3369 982.3213 723.1338 981.7832 732.4663 C993.0615 738.7271 1007.4199 737.8599 1020.0889 732.2192 Cf0.000031 0.408942 0.300206 0.000031 (C=0 M=41 Y=30 K=0) 0 0 Xk968.6191 723.4629 m976.1367 752.1689 997.1357 758.0303 v1018.1387 763.896 1038.4521 754.312 1046.166 740.2036 c1054.665 724.666 1062.5684 719.4409 1061.8047 719.52 c1041.2939 721.6509 1038.876 740.3867 1023.9512 747.6074 c1009.0215 754.8271 992.834 753.6367 983.1172 743.3247 c973.3965 733.0122 968.6191 723.4629 yf0 0 0 1 k967.8721 720.6079 m979.0098 746.3818 999.5703 747.4131 v1020.1289 748.4458 1033.0283 735.0791 1032.6289 730.73 c1032.2285 726.3828 1030.9922 723.5728 1024.708 718.7925 c1018.4219 714.0117 1011.7852 710.7241 y1028.8721 711.1001 1040.2197 723.2109 v1044.6807 727.9741 1047.3496 737.1724 1035.3203 744.1245 c1023.293 751.0781 1012.0986 756.4927 996.1494 752.6011 c980.1992 748.7095 968.4502 726.8911 967.8721 720.6079 cf1066.21 751.5156 m1039.4375 772.9785 1014.9688 771.8193 v990.5039 770.6606 982.2393 765.5742 y997.3213 781.2388 1005.1865 781.9771 v1013.0498 782.7163 1036.6729 774.6953 1046.7676 767.9194 c1056.8633 761.1445 1066.21 751.5156 yf1 Ap987.5117 736.165 m986.8242 728.6802 992.333 722.0518 999.8174 721.3652 c1007.3008 720.6753 1013.9277 726.1875 1014.6182 733.6699 c1015.3027 741.1538 1009.7939 747.7813 1002.3105 748.4683 c994.8281 749.1577 988.2002 743.6475 987.5117 736.165 cf0 Ap996.9375 750.5806 m1010.3018 758.1191 1030.3633 748.479 v1050.4268 738.8369 1040.5254 731.1221 1050.541 724.2104 c1057.8711 719.1509 1062.792 719.6738 y1056.9893 714.8481 1045.8379 720.7437 v1039.4619 724.1182 1039.0801 726.7266 1038.3369 729.2319 c1037.5928 731.7354 1030.8408 743.0747 1019.9053 746.0308 c1008.9727 748.9854 996.9375 750.5806 yf1 Ap0 0 0 0 k1007.2207 723.1841 m1007.043 721.2764 1008.4473 719.5874 1010.3555 719.4126 c1012.2627 719.2358 1013.9502 720.6411 1014.127 722.5483 c1014.3027 724.4561 1012.9014 726.145 1010.9922 726.3208 c1009.0859 726.4966 1007.3965 725.0908 1007.2207 723.1841 cfUu0 Ap0 0 0 0.18 (C=0 M=0 Y=0 K=18) 0 0 Xk837.9092 755.9888 m836.3232 753.3613 835.1084 740.3599 845.1299 731.3745 c855.1563 722.3896 868.9248 723.1758 878.6426 722.7422 c889.9805 722.2339 902.1543 720.4902 901.9385 727.0273 c901.7207 733.5659 894.2207 753.001 884.3916 758.0557 c874.5586 763.1104 845.9844 769.373 837.9092 755.9888 cf0 0 0 0 k847.4561 745.0244 m844.7246 743.6294 844.1797 738.5679 854.2031 729.585 c864.2266 720.5977 875.8477 722.3198 885.5674 722.0977 c890.7637 721.98 902.1543 720.4902 901.9385 727.0273 c901.7207 733.5659 895.3691 737.7256 885.5381 742.7798 c875.707 747.8345 863.0371 752.9756 847.4561 745.0244 cf1 Ap0.45098 0.686275 0.709804 0.466667 (C=45 M=69 Y=71 K=47) 0 0 Xk895.1152 742.0933 m893.6836 729.7974 882.5527 720.9922 870.2568 722.4253 c857.957 723.8599 849.1553 734.9902 850.5889 747.2861 c852.0234 759.583 863.1523 768.3872 875.4512 766.9536 c887.748 765.5186 896.5527 754.3892 895.1152 742.0933 cf0 Ap0.380392 0.65098 0.658824 0.25098 (C=38 M=65 Y=66 K=25) 0 0 Xk853.8359 747.3022 m853.8184 747.1719 853.7832 747.0479 853.7705 746.916 c852.5391 736.3774 860.0908 726.8359 870.6289 725.6064 c880.1934 724.4897 888.916 730.6182 891.3672 739.6392 C881.624 748.0923 867.3965 750.2065 853.8359 747.3022 Cf0.000031 0.408942 0.300206 0.000031 (C=0 M=41 Y=30 K=0) 0 0 Xk902.3906 728.1123 m900.959 757.752 881.6211 767.8213 v862.2813 777.895 840.4277 772.709 829.9688 760.4966 c818.4473 747.0474 809.6348 743.5659 810.3984 743.4858 c830.9063 741.3374 837.1396 759.1714 853.2324 763.1563 c869.3301 767.1401 884.9238 762.6338 892.3027 750.5381 c899.6855 738.4419 902.3906 728.1123 yf0 0 0 1 k902.5332 725.165 m896.9521 752.6826 877.0479 757.9351 v857.1445 763.1875 841.7656 752.771 841.2598 748.4331 c840.752 744.0972 841.3818 741.0928 846.5449 735.1177 c851.71 729.1426 857.5254 724.5562 y840.8838 728.4507 832.2793 742.6426 v828.8965 748.2241 828.1846 757.7754 841.3877 762.0957 c854.5918 766.417 866.6631 769.4048 881.4668 762.3052 c896.2695 755.2056 903.2646 731.4321 902.5332 725.165 cf812.6904 775.7017 m843.3154 791.1777 867.0186 784.9937 v890.7178 778.811 897.7539 772.1284 y886.2285 790.5679 878.6855 792.9131 v871.1465 795.2593 846.375 792.2871 835.0996 787.7407 c823.8213 783.1943 812.6904 775.7017 yf1 Ap886.5264 744.4404 m885.6543 736.9746 878.8955 731.6255 871.4316 732.498 c863.9668 733.3677 858.6201 740.1289 859.4883 747.5933 c860.3613 755.0576 867.1211 760.4048 874.585 759.5327 c882.0498 758.6626 887.3975 751.9038 886.5264 744.4404 cf0 Ap880.2793 760.4902 m868.7588 770.625 847.1396 765.332 v825.5176 760.0386 833.6113 750.4463 822.3867 745.751 c814.1709 742.3125 809.4639 743.8403 y814.1445 737.9209 826.2725 741.3877 v833.2061 743.374 834.1201 745.8472 835.3633 748.1455 c836.6094 750.4414 845.5557 760.1436 856.8672 760.7788 c868.1748 761.4136 880.2793 760.4902 yf1 Ap0 0 0 0 k884.7881 733.2671 m884.5664 731.3643 882.8457 730.001 880.9414 730.2241 c879.0391 730.4448 877.6777 732.168 877.8994 734.0708 c878.1211 735.9741 879.8398 737.3374 881.7432 737.1152 c883.6465 736.8936 885.0078 735.1694 884.7881 733.2671 cfUu0 Ap0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk1030.8154 336.9453 m1007.4814 302.5283 1000.0654 285.4453 v993.7549 270.9092 996.8994 251.7783 1016.2324 249.7783 c1035.5654 247.7783 1062.8994 247.1123 1066.8994 261.1123 c1070.8994 275.1123 1082.8154 322.6953 1080.8154 330.6953 c1078.8154 338.6953 1034.8154 337.6123 1030.8154 336.9453 cf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk1080.8154 330.6953 m1078.8154 338.6953 1034.8154 337.6123 1030.8154 336.9453 C1007.4814 302.5283 1000.0654 285.4453 v998.9873 282.9619 998.1924 280.3428 997.7002 277.6992 C1003.6738 277.0869 1010.0986 276.0586 1014.04 280 C1033.9492 294.7158 1054.6094 307.1699 1077.3145 303.7695 C1079.918 316.2227 1081.6865 327.2119 1080.8154 330.6953 cf1 0.28 1 0.17 (C=100 M=28 Y=100 K=17) 0 0 Xk1034.5078 535.6108 m1047.8066 546.2495 1067.4883 536.1431 v1087.1699 526.0361 1093.0205 463.8003 1093.5527 432.9482 c1094.084 402.0957 1091.957 302.625 y1081.8496 314.3271 1069.6152 312.1992 v1057.3809 310.0723 1049.4023 302.625 1032.9121 305.2842 c1016.4219 307.9443 998.3369 321.7744 y1034.5078 535.6108 lf1 0.28 1 0.43 (C=100 M=28 Y=100 K=43) 0 0 Xk1084.04 365 m1078.04 351 1076.04 338 1070.04 324 c1068.5264 320.2168 1068.1572 315.8623 1067.6348 311.7998 C1068.2842 311.9463 1068.9424 312.082 1069.6152 312.1992 c1074.9277 313.123 1079.8379 311.4385 1083.6943 309.2373 C1082.3057 327.8154 1084.04 346.6982 1084.04 365 Cf1 0.28 1 0.17 (C=100 M=28 Y=100 K=17) 0 0 Xk1014.8262 466.46 m1032.9121 385.0742 1031.3164 356.3496 v1029.7207 327.626 1021.21 304.7529 1013.2305 298.9014 c1005.252 293.0498 1000.4648 288.2627 y998.3369 269.1133 998.3369 245.708 v998.3369 222.3027 991.4219 -27.7051 y905.248 -18.1309 858.9707 -21.8535 v812.6924 -25.5771 773.8613 -29.3008 753.6484 -23.4492 c733.4346 -17.5986 728.6475 -4.83203 714.8164 -7.49219 c700.9863 -10.1514 694.6035 -15.4707 690.8799 -11.2148 c687.1563 -6.95996 729.1787 126.5547 751.5205 180.8125 c773.8613 235.0693 789.8193 274.4326 793.0107 289.8584 c796.2021 305.2842 823.3311 507.4185 821.2031 521.249 c819.0752 535.0791 845.1406 545.7178 y864.29 538.8027 l893.5459 360.0732 932.377 369.6484 v971.208 379.2227 1003.124 514.8657 1004.7197 522.8447 c1006.3154 530.8237 1014.8262 466.46 yf*u1 D1 0.28 1 0.43 (C=100 M=28 Y=100 K=43) 0 0 Xk1014.8262 466.46 m1006.3154 530.8237 1004.7197 522.8447 v1004.3262 520.875 1002.0811 511.1177 998.3438 497.4048 C1002.0479 492.9365 1006.04 488.4683 1006.04 484 c1006.04 463 1014.6494 439.9453 1017.9824 408.9453 c1021.3154 377.9453 1016.04 332 971.04 326 C965.04 326 959.04 325 953.04 327 C943.04 329 932.9824 341.9453 923.9824 340.9453 c900.9824 338.9453 881.04 327 865.04 346 c835.04 380 851.04 430 836.04 472 C835.04 476 833.04 480 832.04 484 C827.5781 497.3867 827.5352 515.1919 821.6396 526.3223 C821.1182 524.6919 820.9346 522.9961 821.2031 521.249 c823.3311 507.4185 796.2021 305.2842 793.0107 289.8584 c790.1357 275.9619 776.8975 242.6338 757.9688 196.4971 C762.0645 123.5254 749.4111 51.1963 749.0586 -21.9082 C750.5 -22.457 752.0195 -22.9775 753.6484 -23.4492 c773.8613 -29.3008 812.6924 -25.5771 858.9707 -21.8535 c905.248 -18.1309 991.4219 -27.7051 Y998.3369 222.3027 998.3369 245.708 v998.3369 269.1133 1000.4648 288.2627 Y1005.252 293.0498 1013.2305 298.9014 v1021.21 304.7529 1029.7207 327.626 1031.3164 356.3496 c1032.9121 385.0742 1014.8262 466.46 Yf0 D940.7871 199.9453 m908.7871 196.9453 879.7871 240.9453 886.7871 245.9453 c893.7871 250.9453 911.1201 243.8027 925.7871 246.9453 c939.7871 249.9453 959.7871 248.9453 968.7871 245.9453 c977.7871 242.9453 972.7871 202.9453 940.7871 199.9453 cf*U1 0.28 1 0.61 (C=100 M=28 Y=100 K=61) 0 0 Xk957.0371 291.1953 m953.2471 291.7363 937.3262 294.2939 933.5371 294.9453 C894.8672 295.9082 881.7324 295.0615 842.04 303 C827.04 307 815.04 313 801.04 319 C827.04 294 859.04 283 895.04 285 C923.04 285 951.04 281 979.04 285 C986.2793 285.5566 993.5127 286.751 1000.5791 288.375 C1000.9492 288.7383 1003.373 291.9111 1005.7871 292.9453 C993.7813 291.957 969.1006 289.002 957.0371 291.1953 Cf845.1406 545.7178 m874.3965 547.8457 874.3965 543.5898 v874.3965 539.3345 894.6104 444.6504 905.7803 421.2456 c916.9512 397.8408 920.6748 388.7979 929.7178 387.7344 c938.7598 386.6699 953.6543 409.543 963.7607 433.48 c973.8682 457.417 989.2939 516.9932 990.3574 524.9722 c991.4219 532.9512 989.8262 535.6108 y1014.8262 532.4194 l997.2725 451.5659 982.9102 422.3096 v968.5488 393.0527 945.6758 360.0732 928.6533 359.0098 c911.6318 357.9453 883.4395 410.0752 878.6523 423.3735 c873.8643 436.6719 845.1406 545.7178 yfUu0.48 0.78 0 0.27 (C=48 M=78 Y=0 K=27) 0 0 Xk1045.3076 531.8994 m1044.5693 543.627 1037.3408 542.9771 1026.8154 544.4453 c1016.29 545.9136 985.2227 540.1636 982.8154 538.9453 c980.4082 537.7275 989.2715 531.314 992.3154 522.4453 c995.3574 513.5762 1011.8125 463.623 1019.2598 428.8696 c1024.1611 405.9941 1030.9619 367.165 y1032.54 387.7207 1040.707 439.4023 v1048.874 491.084 1046.0449 520.2202 1045.3076 531.8994 cf/BBAccumRotation (0.062972) XT0.48 0.78 0 0 (C=48 M=78 Y=0 K=0) 0 0 Xk1045.3076 531.8994 m1044.5693 543.627 1037.3408 542.9771 1026.8154 544.4453 c1016.29 545.9136 985.2227 540.1636 982.8154 538.9453 c980.4082 537.7275 989.2715 531.314 992.3154 522.4453 c995.3574 513.5762 1016.3682 468.1987 1023.8154 433.4453 c1028.7168 410.5703 1030.1484 392.2637 1038.3154 443.9453 c1046.4824 495.627 1046.0449 520.2202 1045.3076 531.8994 cf/BBAccumRotation (0.062972) XTUu0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk756.8398 356.8818 m767.4785 305.2842 778.6484 285.0713 v789.8193 264.8574 800.458 245.708 804.7129 232.4102 c808.9688 219.1113 875.46 227.6221 869.6094 247.8359 c863.7578 268.0488 846.2041 327.0938 838.7568 344.1152 c831.3105 361.1377 761.0947 364.8604 756.8398 356.8818 cf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk756.8398 356.8818 m767.4785 305.2842 778.6484 285.0713 v779.4678 283.5898 780.2822 282.1162 781.0918 280.6484 C782.2354 280.4307 783.3076 280.3418 784.207 280.3418 C809.125 277.9307 838.293 287.6602 860.7012 277.8799 C853.209 302.6465 843.7295 332.75 838.7568 344.1152 c831.3105 361.1377 761.0947 364.8604 756.8398 356.8818 Cf0.48 0.78 0 0.27 (C=48 M=78 Y=0 K=27) 0 0 Xk866.9492 534.5474 m866.9492 546.2979 863.7578 553.165 852.5869 555.2925 c841.417 557.4204 802.5859 558.4844 799.9258 557.4204 c797.2666 556.3564 792.4785 554.2285 795.1387 545.1855 c797.7979 536.1431 818.5439 426.0332 825.9902 403.6914 c833.4375 381.3506 837.1611 366.457 y843.5449 391.457 855.7793 442.5229 v868.0137 493.5884 866.9492 522.8447 866.9492 534.5474 cf0.48 0.78 0 0 (C=48 M=78 Y=0 K=0) 0 0 Xk866.9492 534.5474 m866.9492 546.2979 863.7578 553.165 852.5869 555.2925 c841.417 557.4204 802.5859 558.4844 799.9258 557.4204 c797.2666 556.3564 807.2246 551.7881 812.4531 543.9453 c817.7871 535.9453 824.9258 537.2788 835.4531 483.9453 c840.0137 460.8418 839.5811 391.8789 851.8154 442.9453 c864.0498 494.0107 866.9492 522.8447 866.9492 534.5474 cf1 0.28 1 0.17 (C=100 M=28 Y=100 K=17) 0 0 Xk794.0742 552.1011 m770.0664 553.1445 749.3926 537.207 739.8174 439.3311 c730.2432 341.4561 732.3711 289.8584 y744.0732 300.4971 758.4355 294.1143 v772.7979 287.7305 784.5 281.3477 819.6074 290.9219 c854.7148 300.4971 856.3105 305.2842 y842.4805 381.3506 836.0977 414.8623 v829.7139 448.374 833.4375 464.8643 830.2461 489.8647 c827.0547 514.8657 806.3096 551.5688 794.0742 552.1011 cf1 0.28 1 0.43 (C=100 M=28 Y=100 K=43) 0 0 Xk750.04 340 m745.6016 324.9102 748.248 309.8213 743.3057 295.4316 C747.5762 296.498 752.7988 296.6191 758.4355 294.1143 c764.8369 291.2695 770.7148 288.4277 778.3662 286.9961 C770.2764 311.1582 762.3457 334.6768 756.04 359 C752.04 353 752.04 346 750.04 340 CfUu0.556863 0.709804 0.709804 0.713726 (C=56 M=71 Y=71 K=71) 0 0 Xk941.2041 874.813 m975.7461 875.376 987.9063 871.834 v1000.0645 868.2939 1001.208 866.2622 1006.6621 851.4775 c1012.1123 836.6943 1037.418 785.916 1041.5498 733.3721 c1045.6787 680.8276 1017.7725 510.667 1010.6455 485.6816 c1003.5146 460.6963 989.2129 444.584 y1012.9424 449.3521 1035.0283 497.9316 v1057.1143 546.5098 1077.2295 756.3604 1064.5166 806.3867 c1051.082 859.2485 1013.3877 908.312 986.4004 911.7222 c959.4121 915.1323 941.2041 874.813 yf0.45098 0.686275 0.709804 0.466667 (C=45 M=69 Y=71 K=47) 0 0 Xk941.2051 875.0586 m964.8027 896.2144 976.96 892.6733 v989.1201 889.1343 1007.2588 862.4243 1012.709 847.6411 c1018.1602 832.856 1042.4619 787.7847 1046.5908 735.2397 c1050.7217 682.6968 1025.1924 518.3301 1018.0625 493.3457 c1010.9336 468.3604 1008.916 464.5752 y1017.2393 463.6064 1035.8066 513.6821 v1056.4717 569.4219 1066.8887 766.1758 1062.5225 817.3809 c1058.1553 868.585 1013.749 917.9185 986.7598 921.3301 c959.7725 924.7402 941.2051 875.0586 yf0.380392 0.65098 0.658824 0.25098 (C=38 M=65 Y=66 K=25) 0 0 Xk1006.9756 894.7949 m1002.5254 890.9741 1015.4375 870.9136 1024.5615 854.1714 c1033.6855 837.4302 1045.1699 803.3335 1049.5879 804.3638 c1054.0049 805.395 1052.9307 833.4082 1059.7969 834.6074 c1066.6631 835.8086 1069.1504 839.6001 1071.1934 847.7061 c1073.2402 855.8105 1076.2363 852.2534 1075.3496 860.8794 c1074.4609 869.5049 1064.7227 893.0078 1058.2441 900.8125 c1051.7695 908.6157 1041.915 921.251 1039.1152 915.7012 c1036.3145 910.1479 1041.7891 900.104 1036.3047 899.8696 c1030.8184 899.6333 1027.1563 896.0493 1022.6357 894.4331 c1018.1152 892.8159 1013.3984 900.3076 1006.9756 894.7949 cf0.556863 0.709804 0.709804 0.713726 (C=56 M=71 Y=71 K=71) 0 0 Xk858.3789 441.9463 m820.8789 601.1533 821.6006 680.0415 v822.3232 758.9302 827.0059 773.4819 841.083 809.4434 c855.1592 845.4019 875.0225 882.4326 882.5977 881.7852 c890.1758 881.1387 930.9688 874.5947 y928.3408 914.9199 888.8145 912.8477 v849.2861 910.7773 796.6719 827.1177 794.2324 746.4365 c791.793 665.7549 818.1318 542.7368 830.8154 502.4453 c839.0498 476.2925 858.3789 441.9463 yf0.45098 0.686275 0.709804 0.466667 (C=45 M=69 Y=71 K=47) 0 0 Xk851.6465 462.543 m817.1094 619.3042 817.832 698.1924 v818.5547 777.0811 826.3398 785.4883 840.417 821.4473 c854.4941 857.4063 878.6191 890.8838 891.3047 891.4287 c910.4902 892.2529 930.9688 874.5947 y929.9043 923.7319 890.3789 921.6606 v850.8525 919.5889 800.6621 829.9058 798.2236 749.2246 c796.9248 706.2827 815.125 617.5791 823.293 556.5566 c830.4717 502.9268 851.6465 462.543 yf0.380392 0.65098 0.658824 0.25098 (C=38 M=65 Y=66 K=25) 0 0 Xk848.5313 908.2412 m843.7637 909.5415 831.5127 893.5322 827.8467 894.7368 c824.1826 895.9404 830.1973 904.8477 825.3633 905.7051 c820.5273 906.5645 810.0254 897.3467 805.2402 886.0059 c800.458 874.667 798.6943 852.2598 803.8516 856.3325 c809.0059 860.4043 813.4697 866.8149 813.6504 858.4702 c813.833 850.127 813.6309 839.6353 819.1934 839.7554 c824.7539 839.875 827.3555 848.2793 832.6318 846.7891 c837.9082 845.2979 843.3262 857.0801 851.5215 868.9233 c859.7207 880.7656 865.8555 884.1089 867.7266 891.5337 c869.6016 898.9585 863.6816 890.5894 859.6094 895.7461 c855.5381 900.9019 854.3447 906.6548 848.5313 908.2412 cf*u1 D0.54 1 0 0.4 (C=54 M=100 Y=0 K=40) 0 0 Xk1079.3604 757.5322 m1078.3633 775.0601 1000.9277 779.1782 964.0781 776.6392 c961.8496 776.4858 946.7051 774.9165 937.3496 775.0757 c932.6475 775.1567 917.8369 779.4966 915.4434 779.9966 c879.293 787.5757 803.4941 792.5898 800.0957 775.3657 c797.6826 763.1294 801.873 767.1226 804.0713 760.8608 c805.1533 757.7852 805.1074 750.356 807.2813 739.4897 c809.4551 728.6274 818.7646 696.3667 831.1035 693.5605 c851.8613 688.8413 890.2598 685.0923 902.3818 695.2178 c914.001 704.9243 922.8184 728.5337 923.7266 733.2144 c924.6357 737.897 927.2148 747.2329 938.0898 746.2476 c947.5918 745.3857 948.4688 738.313 949.4316 732.4717 c950.3955 726.6304 955.9639 701.23 965.3662 690.8696 c975.9805 679.1743 1014.5303 677.6118 1035.7412 679.4336 c1048.3496 680.5171 1060.0723 708.6641 1065.6475 721.6538 c1067.6445 726.3013 1071.9678 741.7593 1073.7939 744.7163 c1075.9902 748.2778 1080.042 745.5981 1079.3604 757.5322 cf0 D918.1396 739.8857 m916.7598 731.2173 908.9395 708.3853 898.1709 699.3901 c887.4033 690.3965 853.293 693.7256 834.8496 697.918 c817.3096 701.9072 808.0986 751.3765 815.251 764.5161 c822.4023 777.6558 873.2783 775.0864 905.252 768.0435 c922.5498 764.2319 919.5176 748.5537 918.1396 739.8857 cf1032.6309 684.2642 m1013.7852 682.646 979.5391 684.0356 970.1104 694.4238 c960.6807 704.813 956.0713 728.5034 955.8975 737.2793 c955.7217 746.0547 955.1758 761.9795 972.5303 763.3979 c1005.1631 766.0649 1055.9141 761.5352 1061.1934 747.5371 c1066.4707 733.5396 1050.5498 685.8057 1032.6309 684.2642 cf*UUuu0 0 0 0 k4 M767.7383 159.2705 m765.8994 -83.3955 l1141.7256 -48.5322 l1096.5176 186.5996 l767.7383 159.2705 lf/BBAccumRotation (0.266846) XT*u0 0 0 0.45 (C=0 M=0 Y=0 K=45) 0 0 Xk1142.8809 -49.4004 m765.9863 -84.3594 L764.9209 -84.4609 L766.7676 159.2764 L766.7744 160.165 L1096.4355 187.5654 L1097.3037 187.6348 L1142.8809 -49.4004 L1142.8809 -49.4004 Lf/BBAccumRotation (0.266846) XT1 D1095.7275 185.5625 m768.6982 158.377 L766.8779 -82.3301 L1140.5732 -47.6631 L1095.7275 185.5625 L1095.7275 185.5625 Lf/BBAccumRotation (0.266846) XT*U/BBAccumRotation (0.266846) XTU0 D0 0.45 0.89 0 (C=0 M=45 Y=89 K=0) 0 0 Xk10 M764.8027 167.3242 m763.1201 -75.3525 l1145.4668 -40.7764 l1099.2881 194.3975 l764.8027 167.3242 lf/BBAccumRotation (0.266846) XT0 0.45 0.89 0.25 (C=0 M=45 Y=89 K=25) 0 0 Xk855.7363 174.6846 m807.1309 170.75 L811.7666 132.3203 832.4834 98.1582 850.5117 64 c854.5117 56 857.5117 48 858.5117 40 C861.1055 4.55273 861.4639 -30.8945 869.9121 -65.6953 C893.5996 -63.5537 L922.0889 12.9678 883.8408 100.2666 855.7363 174.6846 Cf977.9141 184.5732 m973.2002 133.6367 969.1611 93.0986 970.1211 41.2783 c970.1211 25.2783 948.6016 12.4561 936.5117 -6 C921.46 -21.0518 918.2227 -42.2676 911.7061 -61.916 C1007.3271 -53.2686 L1008.8223 -41.8457 1009.3096 -30.4229 1010.5117 -19 c1014.5117 22 1021.5117 60 1032.5117 99 c1041.8516 129.5684 1046.873 160.1377 1053.6836 190.7061 C977.9141 184.5732 Lf0.3 0 1 0 (C=30 M=0 Y=100 K=0) 0 0 Xk1126.1709 71.3623 m1126.1904 71.8174 1126.0957 72.2227 1125.8906 72.5791 c1125.1172 73.915 1123.2559 73.6992 1123.0459 73.665 C1123.3193 71.7461 L1123.1797 72.7051 L1123.3135 71.7451 L1123.6934 71.7969 1124.1553 71.707 1124.21 71.6104 C1124.2168 71.6035 1124.5322 70.876 1122.4697 68.2383 c1118.1064 62.6436 991.0039 -62.5508 989.7217 -63.8145 C991.084 -65.1934 L996.3271 -60.0322 1119.5596 61.3516 1124 67.0449 c1125.4111 68.8525 1126.1211 70.2646 1126.1709 71.3623 C1126.1709 71.3623 Lf/BBAccumRotation (0.266846) XT915.0479 -68.8174 m863.7539 -32.9688 766.0879 35.4756 763.6084 37.958 C763.2979 38.3545 763.2881 38.5459 763.2881 38.5479 C763.3408 38.5498 763.7334 38.6494 763.9688 38.6621 C763.8682 40.5986 L763.5674 40.582 762.0332 40.4492 761.5088 39.2861 c761.167 38.5303 761.3721 37.6621 762.125 36.7129 c763.876 34.4873 898.583 -59.6738 913.9404 -70.4092 C915.0479 -68.8174 L915.0479 -68.8174 Lf/BBAccumRotation (0.266846) XTUuu0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk976.0645 -35.3125 m973.4805 -37.417 968.8291 -45.8574 v964.1787 -54.2988 962.8066 -67.2686 952.5059 -72.9736 c942.2041 -78.6777 934.6582 -77.3789 941.6494 -65.5264 c948.6416 -53.6729 952.5449 -42.667 953.084 -29.5801 c953.623 -16.4941 957.8848 5.67188 962.3662 9.21094 c966.8467 12.75 978.3682 27.8818 y976.0645 -35.3125 lf/BBAccumRotation (0.184052) XT0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk959.7842 5.1875 m956.3584 -2.67188 953.5176 -19.0586 953.084 -29.5801 c952.5449 -42.667 948.6416 -53.6729 941.6494 -65.5264 c934.6582 -77.3789 942.2041 -78.6777 952.5059 -72.9736 c962.8066 -67.2686 964.1787 -54.2988 968.8291 -45.8574 c971.6396 -40.7568 973.6895 -37.9805 974.876 -36.5732 C967.0508 -24.4678 963.8594 -9.44434 959.7842 5.1875 Cf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk1031.7656 30.2461 m1041.9893 2.93164 1042.7568 -9.91016 v1043.5254 -22.7549 1048.7861 -35.0303 1036.2305 -41.6963 c1023.6738 -48.3633 1015.7627 -50.918 1001.1563 -50.9316 c986.5488 -50.9453 978.1338 -44.0391 973.6016 -35.6846 c969.0703 -27.3301 966.6182 -12.1816 964.374 -4.4834 c962.1289 3.21582 962.4756 5.71387 969.2363 15.9004 c975.9961 26.0869 977.832 30.7568 984.2236 32.7588 c990.6152 34.7598 1028.7969 34.5635 1031.7656 30.2461 cf/BBAccumRotation (0.184052) XT1042.4854 -18.6191 m1046.0557 -36.3496 1047.875 -44.6689 v1049.6943 -52.9873 1049.9521 -68.9004 1041.9248 -72.2891 c1033.8994 -75.6768 1030.3896 -72.8135 1029.7324 -63.4668 c1029.0742 -54.1211 1028.1855 -34.8086 y1042.4854 -18.6191 lf/BBAccumRotation (0.184052) XT0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk1032.6895 -37.2158 m1034.9063 -54.9297 1033.6855 -64.3545 v1032.4639 -73.7793 1028.6943 -82.5967 1018.7764 -83.0918 c1008.8574 -83.585 1008.8691 -74.9258 1008.9785 -66.7891 c1009.0869 -58.6523 1011.4258 -43.6084 y1032.6895 -37.2158 lf/BBAccumRotation (0.184052) XT0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk1032.7305 -35.4941 m1033.1963 -53.9834 1031.9756 -63.4102 v1030.7539 -72.835 1028.0527 -81.0938 1018.1357 -81.5869 c1008.2178 -82.0811 1007.9707 -74.4609 1008.0801 -66.3252 c1008.1563 -60.6191 1008.666 -61.3584 1011.4258 -43.6084 c1032.7305 -35.4941 lf/BBAccumRotation (0.184052) XT0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk1015.5244 -45.2803 m1014.5059 -63.0557 1012.3838 -73.46 v1010.2637 -83.8643 1003.9209 -86.127 998.5947 -86.5771 c993.2666 -87.0283 990.1055 -81.666 990.998 -73.3838 c991.8916 -65.1006 995.2998 -44.1768 y1015.5244 -45.2803 lf/BBAccumRotation (0.184052) XT0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk1016.0273 -44.1045 m1013.0674 -62.6006 1010.9463 -73.0059 v1008.8262 -83.4102 1004.7783 -84.4336 999.4502 -84.8857 c994.124 -85.3359 990.1055 -81.666 990.998 -73.3838 c991.8916 -65.1006 995.3223 -42.3672 y1016.0273 -44.1045 lf/BBAccumRotation (0.184052) XT0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk998.9238 -46.2061 m998.7441 -59.7676 996.0986 -70.2695 v993.4551 -80.7705 991.6289 -88.5273 983.9219 -87.6865 c973.8408 -86.5869 976.2949 -72.874 976.6162 -64.4277 c976.9355 -55.9805 977.3428 -45.084 975.957 -43.4492 c974.5693 -41.8125 997.1484 -42.4795 998.9238 -46.2061 cf/BBAccumRotation (0.184052) XT0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk972.0059 -32.2266 m972.5938 -33.2734 974.624 -40.5898 976.2422 -48.3086 C976.2471 -48.3135 976.252 -48.3164 976.2578 -48.3213 c979.0645 -51.1084 981.0645 -54.5479 983.7861 -57.4014 c986.0068 -59.7275 987.9658 -61.915 988.3633 -65.2061 c988.5527 -66.7803 987.7168 -67.7236 986.5957 -68.0732 C986.1836 -68.3887 985.7451 -68.6689 985.2158 -68.7656 c984.7148 -68.8584 984.2168 -68.9277 983.709 -68.9297 c983.5049 -68.9307 983.3057 -68.9082 983.1123 -68.8711 C982.9609 -68.8965 982.8086 -68.9229 982.6445 -68.9297 c981.0898 -68.9971 979.543 -68.9521 978.0068 -68.7949 C977.1172 -76.4551 975.6836 -84.8398 984.1016 -85.7588 c991.8105 -86.5996 991.8369 -80.8018 994.4814 -70.2998 c997.125 -59.7979 998.9238 -46.2061 Y995.9717 -38.0996 969.8496 -28.3896 972.0059 -32.2266 cf0 0.65 0.34 0 (C=0 M=65 Y=34 K=0) 0 0 Xk947.7432 -66.2861 m939.8877 -76.4053 l936.4756 -74.0645 l937.625 -70.0625 939.0654 -67.6289 v940.5068 -65.1982 942.7813 -62.8799 y947.7432 -66.2861 lf/BBAccumRotation (0.184052) XTU0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk1066.168 266.876 m1064.9561 238.5146 1066.6719 226.3896 v1068.3887 214.2646 1067.7842 176.8184 1055.6504 143.1777 c1043.5166 109.5361 1030.9111 52.2705 1031.3379 41.2588 c1031.7656 30.2461 1032.2285 21.9463 1020.5898 17.6152 c1008.9502 13.2842 983.4717 19.3623 981.2324 31.3896 c978.9941 43.418 984.5576 100.7256 985.1973 140.8828 c985.8369 181.042 985.1514 231.2334 990.4746 254.9502 c995.7998 278.666 1033.083 287.7695 1046.3154 286.4453 c1059.5459 285.1221 1065.585 270.0137 1066.168 266.876 cf/BBAccumRotation (0.184052) XTUu876.5244 20.4346 m871.4707 -8.29004 873.0664 -21.0557 v874.6621 -33.8223 871.7363 -46.8545 885.3008 -51.1104 c898.8652 -55.3652 907.1104 -56.4297 921.4727 -53.7695 c935.835 -51.1104 945.1436 -47.6523 948.0693 -38.6094 c950.9951 -29.5674 948.335 -9.35352 949.1328 -1.37402 c949.9307 6.60449 949.1328 8.99805 940.6221 17.7754 c932.1113 26.5518 929.4512 30.8076 922.8027 31.6055 c916.1533 32.4033 878.6523 25.2217 876.5244 20.4346 cf874.9287 -29.5674 m874.6621 -47.6523 874.3965 -56.1631 v874.1309 -64.6748 876.79 -80.3662 885.3008 -82.2285 c893.8125 -84.0898 896.7373 -80.6328 895.6738 -71.3232 c894.6104 -62.0146 891.9502 -42.8652 y874.9287 -29.5674 lf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk887.9609 -46.0566 m889.0244 -63.877 891.9502 -72.9189 v894.876 -81.9619 900.1953 -89.9414 910.0361 -88.6113 c919.877 -87.2813 918.2813 -78.7705 916.6855 -70.792 c915.0898 -62.8125 910.0361 -48.4502 y887.9609 -46.0566 lf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk887.6064 -44.3721 m890.5322 -62.6348 893.458 -71.6777 v896.3838 -80.7207 900.5498 -88.3457 910.3906 -87.0156 c920.2305 -85.6855 919.0791 -78.1494 917.4834 -70.1699 c916.3643 -64.5762 915.998 -65.3955 910.0361 -48.4502 c887.6064 -44.3721 lf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk906.3125 -50.8438 m910.5684 -68.1318 914.5576 -77.9727 v918.5469 -87.8135 925.1963 -88.877 930.5156 -88.3457 c935.835 -87.8135 937.9629 -81.9619 935.5684 -73.9834 c933.1748 -66.0039 925.9941 -46.0566 y906.3125 -50.8438 lf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk905.6025 -49.7803 m911.8975 -67.4229 915.8867 -77.2627 v919.877 -87.1035 924.0439 -87.3701 929.3633 -86.8379 c934.6826 -86.3057 937.9629 -81.9619 935.5684 -73.9834 c933.1748 -66.0039 925.6396 -44.2832 y905.6025 -49.7803 lf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk922.8027 -48.7168 m925.4619 -62.0146 929.9834 -71.8555 v934.5049 -81.6963 937.7188 -88.9873 945.1436 -86.75 c954.8516 -83.8242 949.9307 -70.792 948.0693 -62.5469 c946.207 -54.3018 943.8135 -43.6631 944.8779 -41.8018 c945.9414 -39.9395 923.8662 -44.7266 922.8027 -48.7168 cf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk922.8027 -48.7168 m927.0576 -61.749 931.5791 -71.5898 v936.1006 -81.4307 937.1885 -87.126 944.6123 -84.8877 c954.3203 -81.9619 949.9307 -70.792 948.0693 -62.5469 c946.207 -54.3018 945.8721 -43.5654 946.5625 -41.5352 c947.9805 -37.3682 924.2217 -40.2051 922.8027 -48.7168 cf943.2813 -33.8223 m946.207 -35.418 952.3242 -42.8652 v958.4414 -50.3125 962.165 -62.8125 973.3359 -66.5361 c984.5068 -70.2598 991.6875 -67.5996 982.6445 -57.2275 c973.6016 -46.8545 967.751 -36.748 964.8252 -23.9814 c961.8994 -11.2148 953.6543 9.7959 948.6016 12.4561 c943.5479 15.1152 929.4512 27.8818 y943.2813 -33.8223 lf0 0.65 0.34 0 (C=0 M=65 Y=34 K=0) 0 0 Xk976.793 -59.0889 m986.3682 -67.5996 l989.2939 -64.6748 l987.4316 -60.9512 985.5703 -58.8232 v983.709 -56.6953 981.0488 -54.834 y976.793 -59.0889 lf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk799.3945 246.7715 m805.7773 219.1113 806.3096 206.877 v806.8408 194.6426 814.2881 157.9395 832.374 127.0869 c850.46 96.2354 873.333 42.2441 874.9287 31.3389 c876.5244 20.4346 877.5879 12.1895 889.8223 10.0625 c902.0566 7.93457 925.9941 18.5732 925.9941 30.8076 c925.9941 43.042 910.0361 98.3623 902.0566 137.7256 c894.0781 177.0889 885.5674 226.5586 875.9922 248.8994 c866.418 271.2402 839.2891 278.1563 826.5225 274.4326 c813.7559 270.709 799.3945 249.9639 799.3945 246.7715 cfULB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 3 79 79 255 0 50 Lb(Left Woman) Ln0 Au0 O0.45098 0.686275 0.709804 0.466667 (C=45 M=69 Y=71 K=47) 0 0 Xk0 J 0 j 1 w 10 M []0 d0 XR73.2188 762.1465 m75.3115 783.937 77.5449 803.3379 80.6104 820.4468 c81.7803 828.1685 83.4316 835.707 85.5498 843.0229 c89.5879 858.1123 94.8115 870.9019 101.9307 881.4746 C133.6826 936.3984 194.1318 970.8584 260.2334 964.9629 c347.7949 957.1538 413.7031 881.3403 412.9492 792.5664 C416.3193 745.9644 412.29 695.1768 414.0938 654.2261 c416.1748 607.0747 398.709 514.2842 409.3789 440.6982 c424.2852 337.9082 356.7637 195.1523 355.4121 178.7754 c355.1191 175.2139 355.1465 233.9268 357.8936 254.5918 c365.8994 315.1094 366.375 371.293 366.333 430.8408 C355.4785 395.877 353.498 358.1348 350.0342 321.1074 c348.3506 300.708 344.71 282.5068 342.293 262.0879 c339.4805 241.0029 340.9971 219.1172 339.2852 198.8281 C336.3936 203.4473 333.1904 208.6523 329.7373 214.2725 C328.8965 261.7402 331.0479 309.2881 332.25 356.8096 c332.6592 369.6367 331.583 383.1787 331.2578 395.9834 C327.6113 338.1045 327.1699 264.0664 324.998 206.2285 C281.6729 174.1211 260.8447 170.1201 236.9033 164.2988 c221.9443 160.6641 198.5908 157.5918 175.2939 159.4775 C151.8359 209.0234 132.1221 261.7588 130.709 317.502 C129.709 264.4512 139.9473 212.1807 156.8809 162.1123 C150.7334 163.4209 144.7539 165.1846 139.1104 167.4844 C120.8457 214.502 112.8301 264.5244 110.9658 314.7139 C111.001 266.9053 113.4766 216.249 131.0791 171.2734 C114.4707 180.2529 102.0332 194.999 99.0518 218.2744 c90.2354 287.0342 63.4268 660.2085 73.2188 762.1465 cf0.556863 0.709804 0.709804 0.713726 (C=56 M=71 Y=71 K=71) 0 0 Xk151.4473 298.5586 m134.4473 355.5586 127.1719 423.0039 121.1719 482.0039 C114.1719 516.0039 110.4473 574.5586 y132.4473 464.5586 160.4473 416.5586 V151.4473 450.5586 145.4473 517.0586 143.6719 549.0039 c141.8965 580.9492 141.4473 673.5586 y159.4473 546.5586 181.4473 485.5586 v195.4473 444.5586 206.4473 403.5586 219.4473 361.5586 c228.4473 332.5586 241.4473 305.5586 251.4473 277.5586 c258.4473 258.5586 263.4473 240.5586 269.4473 222.5586 c274.3438 208.6836 277.2451 194.8096 281.9502 180.9346 C262.1016 170.9844 247.7334 168.0049 232.0791 164.2988 c224.0205 162.3926 213.5791 160.6494 202.0293 159.6865 C185.2422 192.1162 174.6602 228.5146 164.4473 264.5586 c161.4473 276.5586 155.4473 286.5586 151.4473 298.5586 cf387.376 538.3687 m387.208 494.4497 395.5576 450.7524 394.7324 406.8164 c394.0674 360.1768 391.4707 312.8447 384.3213 266.3535 C369.6807 221.0654 354.4541 186.3623 353.8096 178.7754 c353.6406 176.7705 353.5752 194.5254 354.0527 214.1084 C365.8281 259.8828 376.8486 305.875 378.4297 353.3018 c380.7568 414.9736 373.8799 477.7163 387.376 538.3687 Cf361.9346 659.6191 m362.5371 661.6016 388.0313 682.4771 389.3232 683.1665 C403.3623 647.4819 385.0537 592.6812 378.8379 554.5039 c370.3945 501.1934 357.0107 445.8164 347.2588 392.4707 c341.5449 360.2051 339.0371 330.6455 335.2715 299.085 c332.3066 270.792 333.2539 242.9277 338.0986 215.7207 C337.9541 210.0049 337.7227 204.3564 337.2441 198.8281 C334.2744 203.4473 330.9834 208.6523 327.4365 214.2725 C326.9453 241.3223 327.4512 268.3984 328.208 295.4814 C328.751 299.3594 328.7861 303.2217 328.5439 307.0791 C329.04 323.6563 329.5879 340.2363 330.0186 356.8096 c330.4385 369.6367 329.333 383.1787 328.999 395.9834 C327.6201 374.6543 326.6875 351.1299 325.9473 327.0342 C323.7549 343.3613 323.7188 359.7441 322.123 376.0859 c313.0664 472.2002 332.8643 567.7559 361.9346 659.6191 cf0.556863 0.709804 0.709804 0.94 (C=56 M=71 Y=71 K=94) 0 0 Xk167.5049 372.5039 m168.1943 379.707 167.1797 386.8301 166.1875 393.959 c165.7822 396.8799 165.3271 399.793 164.8984 402.7109 c164.7998 403.3838 164.7285 403.8428 164.6787 404.1494 C164.6582 404.3496 164.6357 404.5684 164.6084 404.8291 c164.4805 405.9473 164.3711 407.0674 164.2822 408.1895 c163.4258 420.9575 162.7246 433.7329 161.9248 446.5044 c161.9043 446.8281 161.8828 447.1523 161.8623 447.4761 C163.6289 450.146 164.5596 453.4072 164.1719 457.1709 c163.5918 462.7939 163.1533 468.4297 162.8057 474.0742 C162.9561 474.1519 163.1064 474.2129 163.2568 474.2949 c166.2998 475.9565 168.6533 478.2471 170.4912 480.9346 C175.0547 476.2188 181.5674 473.9648 188.29 475.814 c193.8301 477.3379 199.8955 482.3911 200.8623 488.3857 c201.6514 493.2793 202.2676 498.1899 202.7402 503.1108 C203.0781 503.9375 203.3447 504.8071 203.5293 505.7188 c205.6797 516.3516 205.3027 526.8281 203.7314 537.252 C203.2627 551.3271 201.7871 565.3892 199.585 579.3154 C199.6064 580.2734 199.6387 581.231 199.6543 582.1895 c200.0225 604.9814 199.2969 628.5234 192.957 650.5708 C193.4727 670.6606 192.4834 690.9106 185.2363 709.2222 C185.6113 728.4644 185.1602 747.7314 183.9277 766.9336 C186.5576 775.2012 188.0605 783.5645 188.7969 792.5547 c189.6338 802.7627 189.5586 813.0439 190.6523 823.2305 c190.7285 823.9424 190.7695 824.4023 190.7852 824.6846 C190.8096 824.8003 190.834 824.9189 190.8623 825.0522 c191.0342 825.9106 191.2188 826.7666 191.4131 827.6196 c191.8418 829.4541 192.2881 831.2842 192.7666 833.106 c193.9414 837.5796 195.1992 842.0327 196.3145 846.5215 c198.2783 854.4209 200.1846 862.7451 200.3115 870.9805 C288.5752 870.8271 378.4199 701.4395 375.1143 691.2402 C373.3955 687.5649 372.2813 683.9048 371.166 680.2427 C365.8896 650.4487 365.3701 623.8042 359.4736 594.5981 c349.2588 545.3066 338.9316 500.249 332.3594 450.4473 c328.2236 417.458 324.6299 385.6299 321.6191 353.3838 C275.4238 347.2676 234.04 341.9912 219.5283 338.5566 c205.4551 335.2266 185.0605 345.2393 164.3525 362.625 C166.125 365.4834 167.1582 368.8828 167.5049 372.5039 cfUu0.2 0.2 0.298039 0 (C=20 M=20 Y=30 K=0) 0 0 Xk307.1543 -227.0547 m444.9668 -227.0547 L436.748 -183.084 426.2852 -129.8691 419.0313 -102.8701 c405.373 -52.0322 381.0928 -3.47168 Y245.2754 -20.9229 233.8936 -60.3789 V271.0723 -162.0537 291.5586 -195.4385 v296.9238 -204.1797 302.2344 -215.3418 307.1543 -227.0547 Cf279.4854 -159.335 m282.0752 -130.374 278.0908 -104.3936 281.5059 -71.3877 C311.0039 -44.8389 371.9883 -28.5107 391.7734 -26.7002 C385.5771 -12.4404 381.0928 -3.47168 Y245.2754 -20.9229 233.8936 -60.3789 V258.2764 -127.0566 278.4307 -170.1494 V278.1943 -166.5801 278.4971 -162.958 279.4854 -159.335 CBb1 (Unnamed gradient 255) 1460.4414 -86.8105 0 204.9384 -1 0 0 1 17053.6641 0 Bg-204.9384 0 0 -170.6777 401.7734 -1.47168 Xm-9049.166 0 0 -170.6777 9450.9395 -1.47168 Bc-204.9384 0 0 -170.6777 401.7734 -1.47168 Bm-9049.166 0 0 -170.6777 196.835 -1.47168 Bcf0 BB0.11 0.18 0.21 0.254902 (C=11 M=18 Y=21 K=25) 0 0 Xk126.0781 -227.0547 m268.8291 -227.0547 L270.2861 -204.7578 271.3535 -180.5322 271.0732 -159.7783 c270.3145 -103.6299 265.0039 -10.3018 260.4512 -1.95508 c255.8984 6.39063 114.7676 29.1543 113.25 26.8789 C93.5225 -13.3369 99.5928 -76.3135 v104.6621 -128.9102 115.5527 -190.498 126.0781 -227.0547 Cf0.2 0.2 0.298039 0 (C=20 M=20 Y=30 K=0) 0 0 Xk125.46 -227.0547 m263.1924 -227.0547 L263.0273 -204.1924 262.4932 -179.3125 261.209 -158.2598 c257.416 -96.042 256.6563 -42.1689 252.1045 -33.8232 c247.5518 -25.4775 100.1621 32.5693 98.6445 30.293 C86.3145 -17.1299 92.3848 -80.1074 v97.4414 -132.5684 113.29 -191.3438 125.46 -227.0547 Cf139.4473 -36 m130.4473 -34 123.4473 -27 114.4473 -26 C106.752 -24.6416 98.8555 -24.3223 91.2139 -25.291 C92.9648 8.43945 98.6445 30.293 Y100.1621 32.5693 250.9531 -25.709 255.5059 -34.0547 c257.4092 -37.5449 258.4297 -48.6943 259.5059 -65.3877 C248.9492 -57.3135 235.0391 -49.7793 220.4473 -47 c192.4473 -42 166.4473 -45 139.4473 -36 CBb1 (Unnamed gradient 256) 1602.709 -17.5156 0 168.292 -1 0 0 1 17053.6641 0 Bg-168.292 0 0 -101.957 259.5059 34.5693 Xm-9201.4336 0 0 -101.957 9460.9395 34.5693 Bc-168.292 0 0 -101.957 259.5059 34.5693 Bm-9201.4336 0 0 -101.957 91.2139 34.5693 Bcf0 BBUu0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk329.6875 480.9971 m316.5996 488.9644 283.5928 502.6221 276.7637 510.02 c269.9355 517.418 280.1777 586.8447 Y195.3867 637.4917 L210.6572 548.0537 199.2754 522.4453 v187.8945 496.8374 173.1934 493.5166 160.1045 489.5332 c147.0156 485.5498 127.2871 321.4668 170.5371 304.9639 c213.7871 288.4609 338.2236 355.2324 347.3281 378.5645 c356.4336 401.8965 342.7764 473.0303 329.6875 480.9971 cf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk163.3555 373.0039 m163.3555 377.0039 167.4121 385.3916 165.4121 388.3916 C155.6914 379.8857 148.9219 369.168 141.7441 358.6992 C143.1602 323.7705 150.3242 292.5234 167.9531 285.7969 c170.7695 284.7227 180.9063 275.4072 184.3555 275.0039 C182.2988 283.4219 169.4434 308.4346 165.4121 347.3916 c164.4121 357.3916 165.3555 363.0039 163.3555 373.0039 Cf0.000031 0.39 0 0.000031 (C=0 M=39 Y=0 K=0) 0 0 Xk192.1602 368.9785 m192.1074 368.8848 192.0508 368.7871 191.9961 368.6934 C191.9961 368.5586 L192.0664 368.6982 192.1182 368.8389 192.1602 368.9785 Cf1 0.28 1 0.17 (C=100 M=28 Y=100 K=17) 0 0 Xk380.335 131.5889 m376.3516 152.6445 354.5371 186.2197 Y352.7012 226.3477 359.2988 358.3506 357.7461 384.2695 C348.1602 385.3643 339.1445 386.916 329.6035 387.4668 C320.2119 383.4072 306.4395 378.4385 290.4219 375.7188 c272.334 372.6465 253.6406 376.3291 241.5664 379.7705 C241.1621 379.7422 240.7637 379.7051 240.3438 379.7021 c227.3086 379.6211 214.3047 378.3018 201.2676 378.9434 c199.7764 379.0166 198.332 379.2744 196.9453 379.667 C196.8203 379.0869 196.6855 378.5225 196.5254 377.9951 c195.9014 375.9473 194.3438 372.8105 192.1602 368.9785 C192.1182 368.8389 192.0664 368.6982 191.9961 368.5586 C191.9961 368.6934 L180.1172 347.9502 150.4297 307.4307 Y144.0957 290.2363 134.209 149.7813 112.1719 122.5039 c72.9424 73.9463 65.1719 -20.4961 Y111.1611 -15.1875 131.1719 -20.4961 v175.6494 -32.2959 233.1484 -47.0293 284.1719 -43.4961 c328.7832 -40.4082 369.0596 -23.2988 397.1719 -16.4961 c415.6777 -12.0166 431.1719 -16.4961 Y384.3184 110.5332 380.335 131.5889 vf1 0.28 1 0.43 (C=100 M=28 Y=100 K=43) 0 0 Xk171.4473 67.5586 m160.4473 68.5586 144.4473 68.5586 140.4473 77.5586 C132.9727 96.8691 128.9873 118.1191 120.0371 136.7168 C137.5547 181.2227 144.8643 292.3232 150.4297 307.4307 C180.1172 347.9502 191.9961 368.6934 V191.9961 368.5586 L192.0664 368.6982 192.1182 368.8389 192.1602 368.9785 C194.3438 372.8105 195.9014 375.9473 196.5254 377.9951 c196.6855 378.5225 196.8203 379.0869 196.9453 379.667 C198.332 379.2744 199.7764 379.0166 201.2676 378.9434 c214.3047 378.3018 227.3086 379.6211 240.3438 379.7021 c240.7637 379.7051 241.1621 379.7422 241.5664 379.7705 C253.6406 376.3291 272.334 372.6465 290.4219 375.7188 c306.4395 378.4385 320.2119 383.4072 329.6035 387.4668 C339.1445 386.916 348.1602 385.3643 357.7461 384.2695 C359.2988 358.3506 352.7012 226.3477 354.5371 186.2197 C376.3516 152.6445 380.335 131.5889 v381.208 126.9746 384.1406 117.2695 388.1865 104.9287 C323.2793 68.8389 245.1357 62.835 171.4473 67.5586 cf0.000031 0.64 0 0.000031 (C=0 M=64 Y=0 K=0) 0 0 Xk192.1621 368.9854 m192.1064 368.8877 192.0527 368.792 191.9961 368.6934 C191.9961 368.5586 L192.0674 368.7012 192.1191 368.8428 192.1621 368.9854 Cf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk280.1777 586.8447 m195.3867 637.4917 L196.8086 628.9575 198.3076 616.6006 V221.9502 596.022 233.5146 564.0815 277.1924 563.5605 C278.667 576.5972 280.1777 586.8447 Yf208.4756 477.583 m237.498 478.1519 246.0342 477.583 v254.5703 477.0137 260.8301 468.4775 267.0898 470.1851 c273.3496 471.8921 271.0732 476.4448 282.4551 478.1519 c293.8359 479.8594 309.2012 483.2734 y282.4551 481.5664 277.333 481.5664 v272.2109 481.5664 268.7969 475.8755 264.8135 476.4448 c260.8301 477.0137 252.8633 481.5664 243.7578 480.9971 c234.6523 480.4282 208.4756 477.583 yf1 0.28 1 0.17 (C=100 M=28 Y=100 K=17) 0 0 Xk337.3701 360.0693 m316.8828 378.8486 321.7207 480.4282 326.8418 482.1353 C376.9971 485.438 386.6719 469.5039 v396.3457 453.5698 386.5947 408.7256 393.4238 391.084 c395.5615 385.5615 402.4395 368.9395 410.8809 348.2744 C394 338.7139 376.3145 330.4512 358.167 322.7979 C351.1641 339.7705 343.8799 354.1025 337.3701 360.0693 cf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk448.2891 194.6006 m446.0996 180.542 390.7837 198.5713 389.1353 205.1631 c388.0103 209.6602 379.1133 296.1992 370.9214 334.3574 C388.7573 339.3242 406.2627 344.96 423.2295 351.9932 C433.2524 304.5381 449.793 204.2578 448.2891 194.6006 cf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk182.2979 234.5898 m181.1602 213.5342 141.3252 139.5547 135.0654 145.2451 c130.3926 149.4932 110.1826 226.6729 97.8682 286.6016 C122.5166 296.6602 143.1865 315.4346 167.8115 327.0576 C174.2295 295.6221 183.0898 249.249 182.2979 234.5898 cf1 0.28 1 0.17 (C=100 M=28 Y=100 K=17) 0 0 Xk105.4219 474.2539 m131.5986 495.8784 154.8389 487.8364 173.5059 497.1699 c181.292 501.063 161.2422 406.4492 156.6895 399.0508 C158.9668 369.459 161.8115 355.8018 v162.6758 351.6523 165.0117 340.7754 167.8115 327.0576 C143.1865 315.4346 122.5166 296.6602 97.8682 286.6016 C93.6865 306.9541 90.4131 325.3203 88.9707 338.1602 c83.2793 388.8076 79.2441 452.6289 105.4219 474.2539 cf1 0.28 1 0.61 (C=100 M=28 Y=100 K=61) 0 0 Xk176.8389 501.1704 m194.4424 464.6118 201.7754 453.9453 v209.1084 443.2788 222.2754 422.4453 y196.7754 418.4453 l182.9409 438.1421 176.7754 449.4453 v170.7754 460.4453 155.5059 491.8369 y176.8389 501.1704 lf314.1719 490.5034 m302.8389 429.8369 l326.1719 428.5034 l336.8389 481.8369 l314.1719 490.5034 lfUu0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk192.084 663.2583 m191.9434 674.6543 192.2744 686.0557 193.1094 697.4229 c193.9238 708.5024 195.2754 719.4971 195.2637 730.6255 c195.25 742.9146 194.458 755.186 194.4043 767.4736 c194.3555 778.7402 195.4121 789.8193 196.6543 801.0044 c197.8711 811.9653 198.0195 822.9102 198.9199 833.8774 c199.3594 839.2407 200.0566 844.5508 201.3643 849.6782 C221.7666 871.207 246.5693 885.041 262.8389 887.8374 c390.8389 909.8374 400.4629 818.4409 402.1436 759.8604 C397.5889 702.417 395.5977 686.4072 v393.6094 670.3975 379.7354 639.9097 360.1719 621.8369 c340.6113 603.7642 316.2734 584.6851 300.5566 577.9956 c284.8359 571.3071 256.8408 588.7114 228.1719 602.5039 c217.9561 607.4199 201.5049 617.8369 194.8496 626.1353 C193.1074 638.4229 192.2363 650.8384 192.084 663.2583 cf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk381.4473 765 m360.1719 834.4453 340.6426 862.3989 317.3096 890.0693 C393.7998 880.3672 400.7422 808.7114 402.1436 759.8604 C397.5889 702.417 395.5977 686.4072 v393.6094 670.3975 379.7354 639.9097 360.1719 621.8369 c354.2021 616.3208 390.6719 634.4453 381.4473 765 Cf193.1094 697.4229 m193.9238 708.5024 195.2754 719.4971 195.2637 730.6255 c195.25 742.9146 194.458 755.186 194.4043 767.4736 c194.3555 778.7402 195.4121 789.8193 196.6543 801.0044 c197.8711 811.9653 198.0195 822.9102 198.9199 833.8774 c199.3594 839.2407 200.0566 844.5508 201.3643 849.6782 C221.7666 871.207 246.5693 885.041 262.8389 887.8374 c264.6807 888.1538 266.4893 888.4385 268.2822 888.708 C235.1719 835.9453 205.8379 772.2788 205.5039 700.9453 c205.1914 634.2583 201.5049 617.8369 194.8496 626.1353 C193.1074 638.4229 192.2363 650.8384 192.084 663.2583 c191.9434 674.6543 192.2744 686.0557 193.1094 697.4229 cf1 Ap0.000031 0.61 0.5 0.000031 (C=0 M=61 Y=50 K=0) 0 0 Xk190.6733 707.5044 m189.1655 698.0566 200.4741 688.3174 215.9272 685.7554 c231.3813 683.1904 245.1333 688.7729 246.644 698.2246 c248.1519 707.6724 236.8452 717.4121 221.3882 719.9766 c205.9351 722.5381 192.1831 716.9561 190.6733 707.5044 cf/BBAccumRotation (0.187237) XT391.5254 708.4761 m393.1289 699.1313 384.7676 689.062 372.8496 685.9941 c360.9297 682.9248 349.9678 688.0137 348.3604 697.3628 c346.7559 706.708 355.1172 716.7764 367.0361 719.8447 c378.9551 722.9141 389.918 717.8257 391.5254 708.4761 cf/BBAccumRotation (0.203273) XT0 Ap0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk317.6465 710.0791 m318.1133 700.3945 322.1826 694.3442 v325.252 689.7891 324.418 685.583 319.9619 683.1777 c315.5039 680.7739 312.6494 680.2695 307.9316 681.7114 c303.2119 683.1558 302.7822 685.2061 300.584 683.562 c298.3867 681.9155 302.3945 669.709 315.0801 670.0327 c327.7676 670.356 334.3945 687.4912 334.4023 691.6582 c334.4053 695.8213 330.0488 696.8857 326.0625 699.584 c321.8242 702.4487 317.6465 710.0791 yf/BBAccumRotation (0.070080) XTUu0 1 1 0.61 (C=0 M=100 Y=100 K=61) 0 0 Xk347.9824 662.814 m345.3682 663.9512 344.9688 660.3491 344.3896 659.9043 c342.502 658.4531 337.2012 647.6787 300.0742 651.0396 c272.9473 653.4937 253.8408 661.5425 250.0996 663.457 c249.4395 663.793 246.8223 668.3066 245.1133 666.9595 c243.4072 665.6104 246.6631 663.1479 247.1914 662.6333 c247.5029 662.3325 247.9824 661.6919 250.3066 660.478 C250.3867 654.6108 251.3848 616.0273 295.2832 617.4297 c337.9346 618.793 343.3965 655.8906 344.5283 657.6553 c344.9209 658.2734 350.3789 661.7656 347.9824 662.814 cf/BBAccumRotation (0.010579) XT0.01 0.01 0.05 0.01 (C=1 M=1 Y=5 K=1) 0 0 Xk316.8125 639.5835 m329.8008 639.6631 336.7305 651.5737 340.0039 656.9307 C334.3867 655.8477 314.291 649.8823 297.9629 650.3877 c284.9854 650.7896 266.4355 657.4048 258.6982 659.5586 C261.0039 653.335 268.165 645.4082 274.4551 642.2354 C266.0898 643.4634 261.2344 642.52 258.7783 635.8301 C265.4258 627.2793 281.0039 613.4409 299.4902 614.0332 c313.6719 614.4854 319.3213 618.8335 325.5508 628.9634 C326.0918 634.3677 326.1191 638.6294 316.8125 639.5835 Cf/BBAccumRotation (0.010579) XT0.000031 0.64 0.300206 0.000031 (C=0 M=64 Y=30 K=0) 0 0 Xk344.5283 657.6553 m344.1895 657.6211 343.5391 657.1021 V340.4922 645.418 328.043 633.584 308.0645 628.4917 c284.4141 622.4668 258.8682 636.291 251.4063 660.1865 C250.2109 660.7642 248.7402 661.499 247.2949 662.457 C247.6924 657.627 249.4854 615.5518 296.0137 613.0186 c336.7227 610.8047 344.5283 657.6553 Yf/BBAccumRotation (0.010579) XT1 Ap0.000031 0.35 0.15 0.000031 (C=0 M=35 Y=15 K=0) 0 0 Xk264.0801 628.2651 m265.3115 627.0571 270.9102 624.7563 271.1016 626.4766 c271.3857 629.0371 268.8398 628.6475 267.4023 629.6064 c264.8418 631.3135 263.6592 634.1265 262.1387 633.3052 c260.6152 632.4868 262.4229 629.8906 264.0801 628.2651 cf0 Ap0.000031 0.64 0.300206 0.000031 (C=0 M=64 Y=30 K=0) 0 0 Xk250.3721 663.3271 m257.6113 661.604 268.8271 661.3906 v284.252 661.0928 293.8242 658.4829 304.5469 658.145 c314.4111 657.8345 323.4219 659.3145 333.1592 659.3755 c340.6992 659.4199 344.4453 660.0078 y336.5889 647.9673 303.2285 648.7119 v269.3623 649.4712 250.3721 663.3271 yf/BBAccumRotation (0.010579) XTUu0 0 0 0.18 (C=0 M=0 Y=0 K=18) 0 0 Xk199.5986 753.7925 m198.1494 751.0874 197.6006 738.0415 208.0703 729.5815 c218.543 721.1211 232.2559 722.6118 241.9814 722.6753 c253.3311 722.749 265.5752 721.6309 265.0273 728.1489 c264.4746 734.6675 255.9893 753.6929 245.9141 758.2378 c235.8359 762.7817 206.9775 767.5737 199.5986 753.7925 cf/BBAccumRotation (0.064903) XT0 0 0 0 k209.6943 743.3315 m207.0371 741.7988 206.7549 736.7163 217.2236 728.2583 c227.6934 719.7964 239.21 722.1108 248.9307 722.3862 c254.125 722.5356 265.5752 721.6309 265.0273 728.1489 c264.4746 734.6675 257.917 738.4961 247.8418 743.04 c237.7666 747.585 224.8486 752.0703 209.6943 743.3315 cf/BBAccumRotation (0.064903) XT1 Ap0.45098 0.686275 0.709804 0.466667 (C=45 M=69 Y=71 K=47) 0 0 Xk249.8262 744.3008 m249.0244 731.9482 238.3584 722.5845 226.0059 723.3862 c213.6504 724.1895 204.2881 734.854 205.0918 747.2075 c205.8945 759.5615 216.5576 768.9243 228.9141 768.1211 c241.2676 767.3184 250.6299 756.6543 249.8262 744.3008 cf/BBAccumRotation (0.064903) XT0 Ap0.380392 0.65098 0.658824 0.25098 (C=38 M=65 Y=66 K=25) 0 0 Xk208.334 747.3896 m208.3213 747.2583 208.2949 747.1333 208.2871 747.001 c207.5977 736.4126 215.6289 727.27 226.2148 726.5825 c235.8232 725.9565 244.2217 732.5239 246.208 741.6582 C236.0449 749.6016 221.7266 750.9849 208.334 747.3896 Cf/BBAccumRotation (0.064903) XT0.000031 0.408942 0.300206 0.000031 (C=0 M=41 Y=30 K=0) 0 0 Xk265.4229 729.2549 m262.4756 758.7827 242.6484 767.8481 v222.8184 776.9185 201.2578 770.6206 191.4375 757.8887 c180.6182 743.8667 171.9961 739.939 172.7637 739.8979 c193.3555 738.8032 198.667 756.9321 214.5352 761.7363 c230.4082 766.5381 246.2119 762.8369 254.2012 751.1357 c262.1943 739.4331 265.4229 729.2549 yf/BBAccumRotation (0.064903) XT0 0 0 1 k265.7158 726.3188 m258.7354 753.5142 238.5879 757.7402 v218.4414 761.9678 203.6152 750.7773 203.3311 746.4189 c203.0479 742.0625 203.8311 739.0942 209.293 733.3921 c214.7559 727.689 220.7979 723.4063 y203.9795 726.4434 194.6592 740.1763 v190.9961 745.5771 189.7949 755.0791 202.7617 760.0693 c215.7266 765.062 227.6289 768.6631 242.7764 762.3315 c257.9238 755.9995 266.124 732.6152 265.7158 726.3188 cf/BBAccumRotation (0.064903) XT173.4033 772.189 m203.1963 789.2124 227.1855 784.2505 v251.1689 779.2891 258.5391 772.9756 y246.0859 790.8013 238.4316 792.7578 v230.7803 794.7148 206.1953 790.4766 195.167 785.3584 c184.1377 780.2417 173.4033 772.189 yf/BBAccumRotation (0.064903) XT1 Ap241.127 746.2051 m240.6387 738.7046 234.1631 733.0166 226.6641 733.5063 c219.1641 733.9917 213.4785 740.4707 213.9639 747.9692 c214.4551 755.4683 220.9297 761.1548 228.4287 760.6665 c235.9268 760.1802 241.6152 753.7036 241.127 746.2051 cf/BBAccumRotation (0.064903) XT0 Ap241.6826 760.4585 m229.6582 769.9897 208.3379 763.5972 v187.0156 757.2031 195.5918 748.0381 184.6211 742.7739 c176.5908 738.9194 171.8125 740.2036 y176.791 734.5322 188.7256 738.6157 v195.5498 740.9541 196.334 743.4712 197.459 745.8301 c198.584 748.186 207.0225 758.334 218.2861 759.5474 c229.5449 760.7603 241.6826 760.4585 yf/BBAccumRotation (0.064903) XT1 Ap0 0 0 0 k219.6338 736.4575 m219.5127 734.5454 217.8623 733.0967 215.9502 733.2217 c214.0391 733.3447 212.5898 734.9956 212.7139 736.9072 c212.8369 738.8188 214.4854 740.2686 216.3994 740.1445 c218.3096 740.0205 219.7588 738.3687 219.6338 736.4575 cf/BBAccumRotation (0.064903) XTUu0 Ap0 0 0 0.18 (C=0 M=0 Y=0 K=18) 0 0 Xk382.5732 749.6685 m384.0166 747.0303 385.291 734.2749 376.5586 725.9512 c367.8232 717.6279 355.9697 717.7432 347.376 717.7588 c337.3486 717.7749 326.2539 717.8965 326.3457 724.272 c326.4375 730.6494 332.7783 749.2949 341.4004 753.7876 c350.0264 758.2813 375.2207 763.1074 382.5732 749.6685 cf/BBAccumRotation (0.016045) XT0 0 0 0 k374.292 739.3896 m376.7314 737.9033 377.29 732.9351 368.5557 724.6128 c359.8223 716.2871 349.5098 718.4946 340.9111 718.7168 c336.3135 718.8364 326.2539 717.8965 326.3457 724.272 c326.4375 730.6494 331.9961 734.4253 340.6191 738.918 c349.2432 743.4116 360.3789 747.8604 374.292 739.3896 cf/BBAccumRotation (0.016045) XT0.45098 0.686275 0.709804 0.466667 (C=45 M=69 Y=71 K=47) 0 0 Xk337.6758 755.875 m340.8311 757.3867 344.25 758.3828 347.5967 759.7017 c348.4961 760.0562 349.0713 760.6963 349.375 761.4302 C357.7061 759.1372 364.3672 751.4976 365.4561 741.9238 c366.832 729.8242 358.792 719.2275 347.4893 718.2544 c338.0762 717.4448 329.3877 723.5771 325.9502 732.6406 C328.2051 741.2207 331.5508 749.3262 337.6758 755.875 Cf/BBAccumRotation (0.016045) XT0.380392 0.65098 0.658824 0.25098 (C=38 M=65 Y=66 K=25) 0 0 Xk362.4707 742.0537 m362.4883 741.9253 362.5205 741.8027 362.5332 741.6729 c363.7139 731.3027 356.8154 722.2188 347.1318 721.3848 c338.3438 720.627 330.2949 726.939 327.999 735.8647 C336.917 743.8052 349.9893 745.3765 362.4707 742.0537 Cf/BBAccumRotation (0.016045) XT0.000031 0.408942 0.300206 0.000031 (C=0 M=41 Y=30 K=0) 0 0 Xk326.21 725.4346 m327.0811 754.3394 344.165 763.3364 v361.251 772.3389 380.7832 766.3174 390.2646 753.9258 c400.708 740.2798 408.6035 736.4932 407.9248 736.4482 c389.6904 735.2427 383.8965 752.9438 369.5098 757.54 c355.1201 762.1353 341.2949 758.4111 334.8887 746.9121 c328.4775 735.4116 326.21 725.4346 yf/BBAccumRotation (0.016045) XT0 0 0 1 k326.2588 722.6001 m330.7422 749.2168 348.2266 753.4326 v365.709 757.6484 379.4502 746.7695 379.9668 742.5098 c380.4844 738.2524 379.9766 735.3472 375.5146 729.749 c371.0537 724.1509 365.9941 719.939 y380.6191 722.9785 387.9863 736.4429 v390.8809 741.7378 391.3564 751.0332 379.6338 755.8584 c367.9102 760.6851 357.207 764.1572 344.2559 757.9033 c331.3047 751.6494 325.5117 728.7539 326.2588 722.6001 cf/BBAccumRotation (0.016045) XT399.9668 769.7554 m374.168 784.7217 354.3115 779.9609 v334.457 775.2012 328.5918 769.4263 y338.1543 785.6284 344.4717 787.4829 v350.7842 789.3389 371.5938 785.8237 381.0859 781.3501 c390.5791 776.876 399.9668 769.7554 yf/BBAccumRotation (0.016045) XT1 Ap331.3975 738.5396 m332.1299 731.2676 338.6162 725.9619 345.8857 726.6938 c353.1563 727.4229 358.4609 733.9121 357.7324 741.1826 c357 748.4526 350.5127 753.7568 343.2432 753.0254 c335.9717 752.2959 330.667 745.8086 331.3975 738.5396 cf/BBAccumRotation (0.016045) XT0 Ap343.5898 755.5688 m354.1357 765.0947 374.0381 759.1475 v393.9434 753.1997 386.5469 744.0845 396.8896 739.0889 c404.46 735.4307 408.7803 736.7622 y404.5049 731.1265 393.3369 734.9502 v386.9521 737.1401 386.1006 739.5962 384.9463 741.8916 c383.791 744.1855 375.5195 754.0073 365.1152 755.0283 c354.7158 756.0479 343.5898 755.5688 yf/BBAccumRotation (0.016045) XT1 Ap0 0 0 0 k334.5146 731.77 m334.7061 729.8638 336.4043 728.4731 338.3125 728.6655 c340.2178 728.856 341.6064 730.5566 341.416 732.4629 c341.2246 734.3696 339.5273 735.7603 337.6211 735.5688 c335.7148 735.3774 334.3262 733.6758 334.5146 731.77 cf/BBAccumRotation (0.016045) XTUu0 Ap1 0.28 1 0.17 (C=100 M=28 Y=100 K=17) 0 0 Xk132.4219 488.0039 m107.4219 486.0039 85.207 474.0996 75.6318 376.2236 c66.0576 278.3486 68.1855 226.751 y79.8877 237.3896 94.25 231.0068 v108.6123 224.623 120.3145 218.2402 155.4219 227.8145 c190.5293 237.3896 192.125 242.1768 y178.2949 318.2432 171.9121 351.7549 v165.5283 385.2666 169.252 401.7568 166.0605 426.7573 c162.8691 451.7583 144.6299 488.9805 132.4219 488.0039 cf1 0.28 1 0.43 (C=100 M=28 Y=100 K=43) 0 0 Xk85.8545 276.8926 m81.416 261.8027 84.0625 246.7139 79.1201 232.3242 C83.3906 233.3906 88.6133 233.5117 94.25 231.0068 c100.6514 228.1621 106.5293 225.3203 114.1807 223.8887 C106.0908 248.0508 98.1602 271.5693 91.8545 295.8926 C87.8545 289.8926 87.8545 282.8926 85.8545 276.8926 CfUu1 0.28 1 0.17 (C=100 M=28 Y=100 K=17) 0 0 Xk357.8047 478.2524 m378.3203 483.228 398.8457 473.0015 423.7178 390.2646 c448.5879 307.5293 455.5146 262.6943 y443.6221 269.876 432.3262 261.9365 v421.0303 253.9951 412.0283 246.5068 380.1426 248.7988 c348.2559 251.0908 346.0684 254.9463 y345.0732 322.8584 344.8857 352.8271 v344.6973 382.7959 338.6875 396.377 337.1943 418.4678 c335.7002 440.5586 347.3496 475.7163 357.8047 478.2524 cf1 0.28 1 0.43 (C=100 M=28 Y=100 K=43) 0 0 Xk431.7715 302.9121 m438.1592 290.6602 438.4404 277.2041 445.1436 265.6406 C441.2813 265.835 436.7598 265.0527 432.3262 261.9365 c427.292 258.3975 422.708 254.9502 416.3555 252.417 C419.2266 274.6172 422.0684 296.2344 423.374 318.2705 C427.8408 313.7783 429.0293 307.7441 431.7715 302.9121 CfUu0.556863 0.709804 0.709804 0.713726 (C=56 M=71 Y=71 K=71) 0 0 Xk352.5449 445.0713 m390.0449 604.2783 389.3232 683.1665 v388.6006 762.0552 383.918 776.6069 369.8408 812.5684 c355.7646 848.5269 342.4971 879.6514 334.9219 879.0039 c327.3438 878.3574 279.9551 877.7197 y282.583 918.0449 322.1094 915.9727 v361.6377 913.9023 414.252 830.2427 416.6914 749.5615 c419.1309 668.8799 392.792 545.8618 380.1084 505.5703 c371.874 479.4175 352.5449 445.0713 yf0.45098 0.686275 0.709804 0.466667 (C=45 M=69 Y=71 K=47) 0 0 Xk359.2773 465.668 m393.8145 622.4292 393.0918 701.3174 v392.3691 780.2061 384.584 788.6133 370.5068 824.5723 c356.4297 860.5313 341.1074 889.209 328.4219 889.7539 c309.2363 890.5781 303.6719 879.2539 y286.3887 898.627 287.9219 909.7539 v290.1279 925.772 313.6484 934.3242 334.8389 924.5039 c389.5049 899.1704 410.2617 833.0308 412.7002 752.3496 c413.999 709.4077 395.7988 620.7041 387.6309 559.6816 c380.4521 506.0518 359.2773 465.668 yf0.556863 0.709804 0.709804 0.713726 (C=56 M=71 Y=71 K=71) 0 0 Xk304.3857 877.938 m269.8438 878.501 257.6836 874.959 v245.5254 871.4189 244.3818 869.3872 238.9277 854.6025 c233.4775 839.8193 208.1719 789.041 204.04 736.4971 c199.9111 683.9526 227.8174 513.792 234.9443 488.8066 c242.0752 463.8213 256.377 447.709 y232.6475 452.4771 210.5615 501.0566 v188.4756 549.6348 161.459 755.4775 174.1719 805.5039 c187.6064 858.3657 232.2021 911.437 259.1895 914.8472 c286.1777 918.2573 304.3857 877.938 yf0.45098 0.686275 0.709804 0.466667 (C=45 M=69 Y=71 K=47) 0 0 Xk304.3848 878.1836 m280.7871 899.3394 268.6299 895.7983 v256.4697 892.2593 238.3311 865.5493 232.8809 850.7661 c227.4297 835.981 203.1279 790.9097 198.999 738.3647 c194.8682 685.8218 220.3975 521.4551 227.5273 496.4707 c234.6563 471.4854 236.6738 467.7002 y228.3506 466.7314 209.7832 516.8071 v189.1182 572.5469 162.5762 762.0737 166.9424 813.2788 c171.3096 864.4829 231.8408 921.0435 258.8301 924.4551 c285.8174 927.8652 304.3848 878.1836 yf0.380392 0.65098 0.658824 0.25098 (C=38 M=65 Y=66 K=25) 0 0 Xk224.8867 876.4165 m230.3135 874.1938 219.4766 856.1914 212.2236 841.4551 c204.9697 826.7192 197.8936 797.9468 192.9404 797.9844 c187.9902 798.0234 184.7393 820.2026 177.1064 819.9453 c169.4736 819.6895 166.1787 822.2319 162.6875 828.2388 c159.1914 834.2441 156.5039 830.9282 156.1045 837.855 c155.709 844.7817 162.5615 864.9321 168.3564 872.1909 c174.1455 879.4468 182.8379 891.0859 186.748 887.2183 c190.6592 883.3477 186.3066 874.5068 192.29 875.2803 c198.2744 876.0527 202.8105 873.8784 207.9658 873.3989 c213.1221 872.918 217.0537 879.623 224.8867 876.4165 cf*u1 D0.54 1 0 0.4 (C=54 M=100 Y=0 K=40) 0 0 Xk171.7261 762.3188 m173.2373 759.1895 175.9424 743.3677 177.4497 738.5386 c181.6543 725.043 190.4106 695.8374 202.8389 693.458 c223.75 689.457 262.2544 687.0332 274.019 697.5708 c284.4409 706.9053 292.6001 731.5957 294.1611 737.3066 c295.7227 743.0166 297.3242 749.9614 306.8647 749.8379 c317.7822 749.6963 319.3848 740.144 319.8057 735.3926 c320.2256 730.6436 326.561 706.2495 337.1157 695.396 c348.1284 684.0742 363.8311 686.2139 384.9648 688.7661 c397.5283 690.2837 410.1162 721.4116 413.3999 731.9922 c416.6836 742.5757 417.4043 749.9697 418.7983 752.918 c421.6299 758.9189 425.3872 754.5146 424.2495 766.9346 c422.6465 784.417 369.6108 784.8784 332.8721 781.0703 c330.4399 780.8198 315.2603 778.0308 310.5757 778.436 c301.2534 779.2432 286.3511 782.3667 284.1509 782.7495 c247.7588 789.0776 170.3135 792.9722 167.5107 775.6406 c165.603 763.8408 169.9097 766.0884 171.7261 762.3188 cf/BBAccumRotation (0.032196) XT0 D341.7759 768.1294 m374.3052 771.835 402.2979 771.5146 408.0552 757.7065 c413.8125 743.8999 399.5483 695.6445 381.6885 693.4858 c362.9111 691.2197 351.5171 689.0547 341.7349 699.1118 c331.9517 709.1699 326.5288 732.687 326.0508 741.4512 c325.5752 750.2153 324.1768 766.1235 341.7759 768.1294 cf/BBAccumRotation (0.032196) XT184.5508 763.8247 m191.2466 777.2026 242.1938 776.4712 274.3779 770.4507 c291.4917 767.2495 289.3062 751.4663 288.2271 742.7559 c287.1479 734.0439 280.1187 710.9565 269.666 701.5962 c259.2168 692.2354 225.0098 694.3877 206.4321 697.9419 c188.7671 701.3242 177.8574 750.4453 184.5508 763.8247 cf/BBAccumRotation (0.032196) XT*U/BBAccumRotation (0.032196) XTUuu0 0 0 0 k4 M392.3232 117.8799 m152.0273 83.999 l136.9365 461.1372 l375.9795 447.3877 l392.3232 117.8799 lf/BBAccumRotation (1.705150) XT*u0 0 0 0.45 (C=0 M=0 Y=0 K=45) 0 0 Xk135.9229 462.168 m376.9023 448.3037 L376.9482 447.4336 L393.3379 117.042 L392.457 116.918 L151.1006 82.8887 L151.0605 83.958 L135.9229 462.168 L135.9229 462.168 Lf/BBAccumRotation (1.705150) XT1 D375.0557 446.4673 m137.9502 460.1099 L152.9541 85.1104 L391.3105 118.7129 L375.0557 446.4673 L375.0557 446.4673 Lf/BBAccumRotation (1.705150) XT*U/BBAccumRotation (1.705150) XTU0 D0 0.45 0.89 0 (C=0 M=45 Y=89 K=0) 0 0 Xk10 M400.6943 116.0332 m160.3672 82.3066 l144.1299 465.8701 l383.3428 451.1641 l400.6943 116.0332 lf/BBAccumRotation (1.705150) XT0 0.45 0.89 0.25 (C=0 M=45 Y=89 K=25) 0 0 Xk320 132 m281 123 241 114 204 130 C258 155 294 202 338 243 C351 254 369 257 382 268 C385.3887 270.4648 388.9673 272.6445 392.4727 274.832 C389.9033 324.4561 L371.2217 318.9219 353.127 311.9199 337 300 c292 267 262 224 213 196 c194.752 184.9404 175.8911 176.0244 156.7583 167.5547 C160.3672 82.3066 L400.6943 116.0332 L398.52 158.0254 L373.1606 147.8135 347.5127 138.2744 320 132 cf367 365 m359 370 366 398 359 394 c340 383 334 355 332 332 C351.293 331.1963 370.4243 333.1426 389.2646 336.793 C387.9346 362.4785 L380.1133 360.9883 372.4121 361.6172 367 365 cf0.3 0 1 0 (C=30 M=0 Y=100 K=0) 0 0 Xk257.835 461.5576 m258.2832 461.6372 258.6973 461.5967 259.0781 461.4404 c260.5049 460.8506 260.5361 458.9766 260.5303 458.7642 C258.5918 458.7817 L259.5615 458.77 L258.5918 458.7759 L258.5928 459.1592 258.4434 459.6055 258.3398 459.6465 C258.332 459.6523 257.5693 459.8691 255.2275 457.4761 c250.2578 452.4121 142.9521 309.8848 141.8691 308.4463 C140.3223 309.6152 L144.7451 315.4941 248.7852 453.6816 253.8418 458.8354 c255.4473 460.4727 256.7539 461.3633 257.835 461.5576 C257.835 461.5576 Lf/BBAccumRotation (1.705150) XT146.7744 233.7666 m189.085 187.6582 269.832 99.8896 272.6201 97.7598 C273.0537 97.5039 273.2451 97.5195 273.2471 97.5205 C273.2422 97.5723 273.2891 97.9746 273.2705 98.21 C275.2031 98.3662 L275.2266 98.0654 275.2969 96.5273 274.2139 95.8545 c273.5098 95.415 272.6221 95.5039 271.582 96.125 c269.1445 97.5664 158.0127 218.6543 145.3428 232.459 C146.7744 233.7666 L146.7744 233.7666 Lf/BBAccumRotation (1.705150) XTUu0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk347.3652 360.2354 m354.1543 358.3691 360.376 360.2354 v366.5996 362.1025 378.3359 359.3037 382.8613 351.2959 c387.3877 343.291 394.8828 326.8779 393.4688 315.9365 c392.0547 304.9932 394.3184 295.9199 385.5488 291.3809 c376.7813 286.8457 360.6592 281.7734 353.5859 281.7734 c346.5156 281.7734 343.9707 281.7734 y308.3311 322.6074 l339.2813 361.04 347.3652 360.2354 vf346.2324 354.0977 m346.2764 360.2354 351.0635 366.6406 v355.8496 373.0469 363.999 390.9814 359.7559 396.585 c355.5127 402.1904 351.0557 392.7568 338.043 376.4785 c325.0332 360.1982 315.6865 352.2305 312.292 343.1563 c308.8975 334.082 304.8184 323.6211 309.4023 321.3779 c313.9902 319.1367 316.252 318.8701 y346.2324 354.0977 lf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk4 M348.8467 363.1191 m348.3105 362.0918 347.8926 361.1084 347.5576 360.1875 C347.6719 360.1572 347.8359 360.1191 348.0459 360.0742 C347.751 359.8359 347.4658 359.5947 347.1885 359.3545 c347.1738 359.3438 347.1582 359.332 347.1445 359.3174 c346.9561 359.1553 346.7725 358.9941 346.5918 358.8379 c346.5791 358.8271 346.5654 358.8135 346.5537 358.8037 c346.4668 358.7285 346.3799 358.6523 346.2949 358.5771 c346.2363 358.5293 346.1797 358.4814 346.123 358.4326 c346.0596 358.3789 345.998 358.3242 345.9346 358.2744 c345.8691 358.2217 345.8047 358.168 345.7422 358.1182 c345.6885 358.0752 345.6338 358.0293 345.585 357.9883 c345.5078 357.9287 345.4355 357.874 345.3613 357.8213 c345.3213 357.793 345.2822 357.7598 345.2432 357.7324 c345.1328 357.6533 345.0225 357.5781 344.918 357.5137 c344.8945 357.498 344.873 357.4873 344.8535 357.4736 c344.7676 357.4219 344.6836 357.374 344.6016 357.3301 c344.5645 357.3145 344.5293 357.2988 344.4912 357.2832 c344.4258 357.25 344.3594 357.2207 344.293 357.1963 c344.2549 357.1836 344.2139 357.1738 344.1768 357.1611 c344.1152 357.1416 344.0566 357.127 343.998 357.1152 c343.9551 357.1074 343.917 357.1016 343.877 357.0977 c343.8213 357.0928 343.7637 357.0898 343.709 357.0898 c343.6709 357.0918 343.6328 357.0928 343.5928 357.0977 c343.5371 357.1016 343.4834 357.1152 343.4316 357.1289 c343.3926 357.1396 343.3555 357.1514 343.3203 357.1631 c343.2646 357.1836 343.21 357.2109 343.1582 357.2422 c343.124 357.2607 343.0879 357.2764 343.0537 357.2988 c342.9971 357.3398 342.9404 357.3887 342.8848 357.4395 c342.8564 357.4668 342.8291 357.4863 342.8008 357.5137 c342.7188 357.5947 342.6367 357.6934 342.5566 357.8057 C340.4844 361.7168 343.167 362.9404 348.8467 363.1191 Cf358.7441 359.8398 m377.0635 365.3057 382.4395 365.8418 v387.8125 366.374 395.7324 366.7998 398.8438 360.9824 c401.9531 355.167 396.6895 350.7744 386.5068 346.5068 c376.3242 342.2344 358.7441 359.8398 yf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk10 M358.7441 359.8398 m374.4844 364.3711 379.8604 364.9063 v385.2344 365.4395 393.8574 366.2725 397.1494 360.5439 c399.3848 356.6523 393.1846 350.8965 383.0029 346.625 c372.8203 342.3574 358.7441 359.8398 yf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk4 M383.1445 345.6904 m394.6279 350.0244 399.5635 344.3223 v404.502 338.6182 400.3984 329.8223 387.2471 327.6777 c377.9434 326.1602 383.1445 345.6904 yf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk10 M378.6533 344.6104 m394.0234 348.7939 398.96 343.0918 v403.8975 337.3877 393.8926 328.9287 384.5586 327.5947 c375.2256 326.2578 378.6533 344.6104 yf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk4 M391.4893 329.6797 m401.1064 330.8818 403.3691 326.3418 v405.6328 321.8047 400.6289 312.999 391.4893 311.9316 c382.3477 310.8652 391.4893 329.6797 yf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk10 M384.1699 326.1641 m398.3389 332.8457 401.9746 325.6406 v404.2568 321.1152 397.6592 312.9531 388.5186 311.8877 c379.3818 310.8213 384.1699 326.1641 yf388.001 310.5625 m402.8623 312.8457 404.0088 306.1494 v405.3477 298.3213 390.3574 293.7832 388.0947 294.0527 c385.832 294.3193 388.001 310.5625 yf331.4795 310.9395 m321.5762 325.1289 308.3311 326.1357 y265.8125 280.4912 214.333 265.0127 v162.8555 249.5332 146.2598 257.2246 135.5107 229.4678 c124.7637 201.7109 122.1719 145.9453 138.9053 143 c147.4092 141.5029 151.9297 147.6611 160.9678 149.9375 c170.0098 152.2178 227.1602 166.2285 257.1406 195.585 c287.1221 224.9434 343.9707 281.7734 y343.9717 281.7734 341.3809 296.749 331.4795 310.9395 cf0 0.65 0.34 0 (C=0 M=65 Y=34 K=0) 0 0 Xk353.2944 386.5781 m359.854 397.582 l356.4312 399.9063 l353.124 397.3779 351.3838 395.1494 v349.644 392.9209 348.3149 389.959 y353.2944 386.5781 lf/BBAccumRotation (1.759864) XTUu0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk262.9419 101.9453 m239.2466 70.4629 227.6455 64.9014 v216.0439 59.3398 206.6631 49.832 195.748 58.9404 c184.834 68.0488 179.48 74.4092 173.9512 87.9297 c168.4209 101.4482 166.2959 111.1484 172.3208 118.5 c178.3442 125.8506 196.7866 134.5439 203.0669 139.5303 c209.3472 144.5156 211.792 145.1396 223.7773 142.7266 c235.7622 140.3135 240.7803 140.377 245.0469 135.2158 c249.314 130.0547 265.8179 106.3242 262.9419 101.9453 cf219.4785 61.8652 m204.4097 51.8623 197.395 47.0361 v190.3779 42.21 175.7417 35.9609 169.5728 42.1123 c163.4038 48.2666 164.73 52.5967 173.1362 56.7354 c181.5415 60.876 199.0879 68.9932 y219.4785 61.8652 lf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk198.5605 63.9111 m182.9956 55.1689 173.8076 52.7402 v164.6191 50.3115 155.0298 50.4707 150.8271 59.4678 c146.6245 68.4658 154.6465 71.7256 162.2207 74.6973 c169.7959 77.6709 184.6099 81.1865 y198.5605 63.9111 lf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk200.1689 64.5234 m183.2251 57.1094 174.0361 54.6807 v164.8472 52.252 156.1802 51.6318 151.9775 60.6289 c147.7759 69.626 154.7373 72.7324 162.313 75.7051 c167.623 77.7881 167.1318 77.0371 184.6099 81.1865 c200.1689 64.5234 lf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk184.6104 76.7588 m167.7666 70.9902 157.3315 69.0244 v146.896 67.0586 142.4053 72.0771 139.9761 76.8389 c137.5474 81.6016 141.3188 86.5547 149.3252 88.8564 c157.3315 91.1572 177.9932 95.9043 y184.6104 76.7588 lf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk185.8882 76.7373 m167.644 72.4922 157.21 70.5264 v146.7739 68.5615 144.2964 71.9219 141.8677 76.6846 c139.4385 81.4473 141.3188 86.5547 149.3252 88.8564 c157.3315 91.1572 179.6772 96.5654 y185.8882 76.7373 lf0.04 0.3 0.42 0 (C=4 M=30 Y=42 K=0) 0 0 Xk177.4819 91.7803 m164.8579 86.8271 154.1353 85.3076 v143.4121 83.79 135.541 82.5508 133.4082 90.0059 c130.6196 99.7539 144.2427 102.6621 152.1851 105.5566 c160.1279 108.4473 170.3716 112.1875 171.3608 114.0889 c172.3525 115.9912 180.2632 94.833 177.4819 91.7803 cf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk177.4819 91.7803 m164.2183 88.3125 153.4956 86.7949 v142.7725 85.2764 137.3936 83.1113 135.2622 90.5674 c132.4731 100.3145 144.2427 102.6621 152.1851 105.5566 c160.1279 108.4473 169.3403 113.9717 170.6743 115.6514 c173.4126 119.0967 183.8745 97.5771 177.4819 91.7803 cf178.937 117.0605 m176.0127 118.6602 166.4399 119.7773 v156.8677 120.8965 144.3394 117.2686 135.166 124.6523 c125.9927 132.0352 124.3477 139.5137 137.9624 137.5156 c151.5781 135.5176 163.2437 136.0615 175.5645 140.5049 c187.8853 144.9473 210.0176 149.374 214.9878 146.5625 c219.9575 143.749 238.3193 138.7949 y178.937 117.0605 lf0 0.65 0.34 0 (C=0 M=65 Y=34 K=0) 0 0 Xk139.561 131.5879 m127.2241 135.0391 l128.1025 139.082 l132.2417 139.5293 135.0376 139.1152 v137.8345 138.7002 140.8384 137.4678 y139.561 131.5879 lf0 0.17 0.31 0 (C=0 M=17 Y=31 K=0) 0 0 Xk451.0161 163.2793 m429.5884 144.874 420.6689 139.2793 v411.75 133.6836 376.6963 121.2793 345.1104 113.2793 c315.7217 105.8359 265.0112 94.7393 256.5464 90.6133 c248.0835 86.4873 246.3228 82.9307 239.2056 91.2793 c232.0879 99.6279 231.835 130.4131 240.5098 136.416 c249.1851 142.4199 295.7285 157.3135 327.2993 170.502 c358.8687 183.6924 389.2891 221.0039 409.521 224.6133 c429.7524 228.2275 440.7021 218.5713 444.8228 207.2793 c451.6348 188.6133 453.2803 164.8467 451.0161 163.2793 cfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF